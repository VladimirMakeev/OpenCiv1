using OpenCiv1.GPU;
using Disassembler;
using IRB.Collections.Generic;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Reflection;
using System.Threading;
using System.Windows.Forms;

namespace OpenCiv1
{
	public class VGADriver
	{
		private OpenCiv1 oParent;
		private CPU oCPU;
		private ushort usSegment = 0;

		private Thread oVGAThread;
		private VGAForm oVGAForm = null;
		public object VGALock = new object();
		private BDictionary<int, VGABitmap> aScreens = new BDictionary<int, VGABitmap>();
		private int iBitmapNextID = 0xb000;
		private BDictionary<int, VGABitmap> aBitmaps = new BDictionary<int, VGABitmap>();
		private Queue<int> aKeys = new Queue<int>();
		private CivFonts aFonts;

		private ushort Var_89e = 0;
		private ushort Var_8a0 = 0;
		private ushort Var_8a2 = 0;
		private ushort Var_8a4 = 0;
		private ushort Var_8a6 = 0;
		private ushort Var_8a8 = 0;
		private ushort Var_8aa = 0;
		private ushort Var_8ac = 0;
		private ushort Var_8ae = 0;
		private ushort Var_8b0 = 0;

		private ushort Var_15c0 = 0;
		private short Var_15c2_xPos = 0;
		private short Var_15c4_yPos = 0;
		private ushort Var_15ca_BufferX = 0;
		private ushort Var_15cc_BufferY = 0;
		private ushort Var_15ce_BufferWidth = 0;
		private ushort Var_15d0_BufferHeight = 0;
		private ushort Var_15d2_BufferFlag = 0;
		private ushort Var_15d4_ScreenID = 0;

		private byte[] Var_15d6_Buffer = new byte[512];
		private ushort Var_1980_ActiveScreenID = 0;
		private ushort Var_1982_XOffset = 0;
		private ushort Var_1984_YOffset = 0;
		private ushort Var_1986_Width = 319;
		private byte Var_198a_FrontColor = 0;
		private PixelWriteModeEnum Var_198b_PixelMode = PixelWriteModeEnum.Normal;

		#region Fonts
		private byte[] Var_19f0_FontTable = new byte[] {
			0x09, 0x00, 0x7c, 0x00, 0xe4, 0x03, 0x8c, 0x06, 0x2f, 0x0f, 0xac, 0x1b, 0x90, 0x28, 0x38, 0x34,
			0x60, 0x3b, 0x47, 0x43, 0x05, 0x02, 0x03, 0x07, 0x06, 0x06, 0x05, 0x01, 0x03, 0x04, 0x05, 0x05,
			0x02, 0x05, 0x01, 0x04, 0x05, 0x04, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x02, 0x02,
			0x05, 0x05, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x04, 0x06, 0x06,
			0x06, 0x07, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x07, 0x07, 0x06, 0x06, 0x06, 0x03,
			0x07, 0x03, 0x06, 0x09, 0x05, 0x05, 0x05, 0x04, 0x05, 0x05, 0x03, 0x05, 0x04, 0x03, 0x04, 0x04,
			0x03, 0x05, 0x04, 0x05, 0x05, 0x05, 0x05, 0x05, 0x04, 0x05, 0x05, 0x05, 0x04, 0x04, 0x04, 0x07,
			0x05, 0x07, 0x07, 0x04, 0x20, 0x7f, 0x01, 0x00, 0x07, 0x01, 0x01, 0x00, 0x00, 0x00, 0xa0, 0x38,
			0x00, 0x40, 0x20, 0x80, 0x20, 0x40, 0x20, 0x00, 0x00, 0x00, 0x00, 0x10, 0x70, 0x60, 0x70, 0xf0,
			0x30, 0xf8, 0x70, 0xf8, 0x70, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x78, 0xf8, 0x78,
			0xf8, 0xfc, 0xfc, 0x78, 0xcc, 0xf0, 0x3c, 0xcc, 0xc0, 0xc6, 0xcc, 0x78, 0xf8, 0x78, 0xf8, 0x78,
			0xfc, 0xcc, 0xc6, 0xc6, 0xcc, 0xcc, 0xfc, 0xe0, 0x10, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00,
			0x08, 0x00, 0x20, 0x00, 0x80, 0x40, 0x10, 0x80, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x38, 0x70, 0x00, 0x00, 0xc0, 0xa0, 0x28,
			0x70, 0xa8, 0x50, 0x80, 0x40, 0x20, 0xa8, 0x20, 0x00, 0x00, 0x00, 0x10, 0xd8, 0xe0, 0xd8, 0x18,
			0xb0, 0xc0, 0xc0, 0x98, 0xd8, 0xd8, 0x00, 0x00, 0x18, 0x00, 0xc0, 0x88, 0x00, 0xcc, 0xcc, 0xcc,
			0xcc, 0xc0, 0xc0, 0xcc, 0xcc, 0x60, 0x18, 0xd8, 0xc0, 0xee, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xc0,
			0x30, 0xcc, 0xc6, 0xc6, 0xcc, 0xcc, 0x18, 0x80, 0x28, 0x20, 0x04, 0x38, 0x00, 0x00, 0x80, 0x00,
			0x08, 0x00, 0x40, 0x00, 0x80, 0x00, 0x00, 0x80, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe6, 0xf8, 0x18, 0x88, 0x00, 0x00, 0xc0, 0x00, 0x7c,
			0xd8, 0x50, 0x20, 0x80, 0x80, 0x10, 0x70, 0x20, 0x00, 0x00, 0x00, 0x20, 0xd8, 0x60, 0x18, 0x70,
			0xb0, 0xf0, 0xf0, 0x30, 0x70, 0xd8, 0xc0, 0x40, 0x60, 0xf8, 0x30, 0x10, 0x00, 0xcc, 0xf8, 0xc0,
			0xcc, 0xf0, 0xc0, 0xc0, 0xfc, 0x60, 0x18, 0xf0, 0xc0, 0xd6, 0xec, 0xcc, 0xcc, 0xcc, 0xcc, 0x78,
			0x30, 0xcc, 0x6c, 0xd6, 0x78, 0x78, 0x30, 0x80, 0x4c, 0x20, 0x0c, 0x7c, 0x00, 0x68, 0xf0, 0x70,
			0x78, 0x70, 0x40, 0x78, 0xe0, 0x40, 0x10, 0xa0, 0x40, 0xd0, 0xe0, 0x70, 0xf0, 0x78, 0xf0, 0x78,
			0xe0, 0x88, 0x88, 0xa8, 0x90, 0x90, 0xf0, 0x6e, 0xf8, 0x2a, 0xa8, 0x00, 0x00, 0xc0, 0x00, 0xba,
			0x88, 0x30, 0x50, 0x00, 0x80, 0x10, 0xa8, 0xf8, 0x00, 0xf8, 0x00, 0x20, 0xd8, 0x60, 0x70, 0x18,
			0xf8, 0x18, 0xd8, 0x30, 0xd8, 0x78, 0x00, 0x00, 0x80, 0x00, 0x08, 0x20, 0x00, 0xcc, 0xcc, 0xc0,
			0xcc, 0xc0, 0xe0, 0xdc, 0xcc, 0x60, 0x18, 0xf0, 0xc0, 0xc6, 0xdc, 0xcc, 0xf8, 0xcc, 0xf8, 0x0c,
			0x30, 0xcc, 0x6c, 0xd6, 0x78, 0x30, 0x60, 0x80, 0x9e, 0x20, 0xd8, 0x7c, 0x00, 0x98, 0x88, 0x80,
			0x88, 0xf8, 0xe0, 0x88, 0x90, 0x40, 0x10, 0xc0, 0x40, 0xa8, 0x90, 0x88, 0x88, 0x88, 0x88, 0xf0,
			0x40, 0x88, 0x88, 0xa8, 0x60, 0x90, 0x20, 0x2c, 0xf8, 0x44, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x38,
			0xd8, 0x68, 0x98, 0x00, 0x40, 0x20, 0x20, 0x20, 0x40, 0x00, 0x00, 0x40, 0xd8, 0x60, 0xc0, 0x18,
			0x30, 0xd8, 0xd8, 0x60, 0xd8, 0x18, 0xc0, 0x40, 0x60, 0xf8, 0x30, 0x00, 0x00, 0xfc, 0xcc, 0xcc,
			0xcc, 0xc0, 0xc0, 0xcc, 0xcc, 0x60, 0xd8, 0xd8, 0xc0, 0xc6, 0xcc, 0xcc, 0xc0, 0xd8, 0xd8, 0xcc,
			0x30, 0xcc, 0x38, 0x6c, 0xcc, 0x30, 0xc0, 0x80, 0x7c, 0x20, 0xf0, 0x38, 0x00, 0x88, 0x88, 0x80,
			0x88, 0x80, 0x40, 0x78, 0x90, 0x40, 0x10, 0xa0, 0x40, 0xa8, 0x90, 0x88, 0x88, 0x88, 0x80, 0x08,
			0x40, 0x88, 0x50, 0x50, 0x60, 0x70, 0x40, 0x28, 0xf8, 0xa8, 0x70, 0x00, 0x00, 0xc0, 0x00, 0x6c,
			0x70, 0x90, 0x68, 0x00, 0x20, 0x40, 0x00, 0x20, 0x40, 0x00, 0x80, 0x40, 0x70, 0xf0, 0xf8, 0xf0,
			0x78, 0x70, 0x70, 0x60, 0x70, 0x70, 0x00, 0x40, 0x18, 0x00, 0xc0, 0x20, 0x00, 0xcc, 0xf8, 0x78,
			0xf8, 0xfc, 0xc0, 0x7c, 0xcc, 0xf0, 0x70, 0xcc, 0xfc, 0xc6, 0xcc, 0x78, 0xc0, 0x6c, 0xcc, 0x78,
			0x30, 0x78, 0x10, 0x6c, 0xcc, 0x30, 0xfc, 0xe0, 0x38, 0xe0, 0x60, 0x00, 0x00, 0x68, 0xf0, 0x70,
			0x70, 0x70, 0x40, 0x08, 0x90, 0x40, 0x90, 0x90, 0xe0, 0xa8, 0x90, 0x70, 0xf0, 0x78, 0x80, 0xf0,
			0x30, 0x70, 0x20, 0x50, 0x90, 0x10, 0xf0, 0x28, 0x70, 0x30, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x08, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0x03,
			0x04, 0x03, 0x03, 0x03, 0x03, 0x03, 0x04, 0x03, 0x03, 0x03, 0x03, 0x03, 0x04, 0x03, 0x04, 0x04,
			0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03, 0x03, 0x03, 0x04, 0x03, 0x04, 0x04, 0x04,
			0x04, 0x04, 0x04, 0x04, 0x04, 0x03, 0x04, 0x04, 0x04, 0x05, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
			0x03, 0x04, 0x04, 0x05, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04,
			0x04, 0x04, 0x04, 0x04, 0x04, 0x03, 0x04, 0x04, 0x04, 0x05, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
			0x03, 0x04, 0x04, 0x05, 0x04, 0x04, 0x04, 0x03, 0x03, 0x07, 0x03, 0x03, 0x20, 0x7f, 0x01, 0x00,
			0x05, 0x01, 0x01, 0x00, 0x00, 0x40, 0xa0, 0x00, 0x70, 0x00, 0x00, 0x40, 0x40, 0x40, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x20, 0x60, 0x40, 0xe0, 0xe0, 0xa0, 0xf0, 0x60, 0xf0, 0x60, 0x60, 0x00, 0x00,
			0x20, 0x00, 0x80, 0x60, 0x00, 0x60, 0xe0, 0x70, 0xe0, 0xf0, 0xf0, 0x70, 0x90, 0xe0, 0x70, 0x90,
			0x80, 0x88, 0x90, 0x60, 0xe0, 0x60, 0xe0, 0x70, 0xe0, 0x90, 0x90, 0x88, 0x90, 0x90, 0xf0, 0xe0,
			0x00, 0xe0, 0x00, 0x00, 0x00, 0x60, 0xe0, 0x70, 0xe0, 0xf0, 0xf0, 0x70, 0x90, 0xe0, 0x70, 0x90,
			0x80, 0x88, 0x90, 0x60, 0xe0, 0x60, 0xe0, 0x70, 0xe0, 0x90, 0x90, 0x88, 0x90, 0x90, 0xf0, 0xe0,
			0x00, 0x70, 0x00, 0x00, 0x00, 0x40, 0xa0, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x80, 0x20, 0x50, 0x40,
			0x00, 0x00, 0x00, 0x20, 0x90, 0xc0, 0x10, 0x10, 0xa0, 0x80, 0x80, 0x10, 0x90, 0x90, 0x40, 0x40,
			0x40, 0xe0, 0x40, 0x90, 0x00, 0x90, 0x90, 0x80, 0x90, 0x80, 0x80, 0x80, 0x90, 0x40, 0x20, 0xa0,
			0x80, 0xd8, 0xd0, 0x90, 0x90, 0x90, 0x90, 0x80, 0x40, 0x90, 0x90, 0x88, 0x90, 0x90, 0x20, 0x80,
			0x00, 0x20, 0x00, 0x00, 0x00, 0x90, 0x90, 0x80, 0x90, 0x80, 0x80, 0x80, 0x90, 0x40, 0x20, 0xa0,
			0x80, 0xd8, 0xd0, 0x90, 0x90, 0x90, 0x90, 0x80, 0x40, 0x90, 0x90, 0x88, 0x90, 0x90, 0x20, 0x80,
			0x00, 0x32, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x80, 0x20, 0x20, 0xe0,
			0x00, 0xe0, 0x00, 0x40, 0x90, 0x40, 0x60, 0x60, 0xf0, 0xe0, 0xe0, 0x20, 0x60, 0x70, 0x00, 0x00,
			0x80, 0x00, 0x20, 0x20, 0x00, 0x90, 0xe0, 0x80, 0x90, 0xc0, 0xc0, 0xb0, 0xf0, 0x40, 0x20, 0xc0,
			0x80, 0xa8, 0xb0, 0x90, 0x90, 0x90, 0xe0, 0x60, 0x40, 0x90, 0x90, 0xa8, 0x60, 0x60, 0x40, 0x80,
			0x00, 0x20, 0x00, 0x00, 0x00, 0x90, 0xe0, 0x80, 0x90, 0xc0, 0xc0, 0xb0, 0xf0, 0x40, 0x20, 0xc0,
			0x80, 0xa8, 0xb0, 0x90, 0x90, 0x90, 0xe0, 0x60, 0x40, 0x90, 0x90, 0xa8, 0x60, 0x60, 0x40, 0x80,
			0x00, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x80, 0x20, 0x50, 0x40,
			0x40, 0x00, 0x00, 0x80, 0x90, 0x40, 0x80, 0x10, 0x20, 0x10, 0x90, 0x40, 0x90, 0x10, 0x40, 0x40,
			0x40, 0xe0, 0x40, 0x00, 0x00, 0xf0, 0x90, 0x80, 0x90, 0x80, 0x80, 0x90, 0x90, 0x40, 0x20, 0xa0,
			0x80, 0x88, 0x90, 0x90, 0xe0, 0xa0, 0xa0, 0x10, 0x40, 0x90, 0x60, 0xd8, 0x90, 0x20, 0x80, 0x80,
			0x00, 0x20, 0x00, 0x00, 0x00, 0xf0, 0x90, 0x80, 0x90, 0x80, 0x80, 0x90, 0x90, 0x40, 0x20, 0xa0,
			0x80, 0x88, 0x90, 0x90, 0xe0, 0xa0, 0xa0, 0x10, 0x40, 0x90, 0x60, 0xd8, 0x90, 0x20, 0x80, 0x80,
			0x00, 0x98, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
			0x80, 0x00, 0x40, 0x80, 0x60, 0xe0, 0xf0, 0xe0, 0x20, 0xe0, 0x60, 0x40, 0x60, 0x60, 0x00, 0x80,
			0x20, 0x00, 0x80, 0x20, 0x00, 0x90, 0xe0, 0x70, 0xe0, 0xf0, 0x80, 0x70, 0x90, 0xe0, 0xc0, 0x90,
			0xf0, 0x88, 0x90, 0x60, 0x80, 0x50, 0x90, 0xe0, 0x40, 0x60, 0x60, 0x88, 0x90, 0x20, 0xf0, 0xe0,
			0x00, 0xe0, 0x00, 0x00, 0x00, 0x90, 0xe0, 0x70, 0xe0, 0xf0, 0x80, 0x70, 0x90, 0xe0, 0xc0, 0x90,
			0xf0, 0x88, 0x90, 0x60, 0x80, 0x50, 0x90, 0xe0, 0x40, 0x60, 0x60, 0x88, 0x90, 0x20, 0xf0, 0xe0,
			0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x05, 0x02, 0x03, 0x06, 0x06, 0x06, 0x05, 0x01, 0x03, 0x04, 0x05, 0x05,
			0x02, 0x05, 0x01, 0x04, 0x06, 0x04, 0x07, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x02, 0x02,
			0x05, 0x05, 0x05, 0x05, 0x05, 0x08, 0x06, 0x07, 0x07, 0x06, 0x06, 0x08, 0x08, 0x04, 0x07, 0x09,
			0x07, 0x0a, 0x08, 0x08, 0x06, 0x09, 0x07, 0x05, 0x06, 0x08, 0x08, 0x0c, 0x08, 0x08, 0x06, 0x03,
			0x07, 0x03, 0x06, 0x09, 0x05, 0x05, 0x05, 0x04, 0x05, 0x04, 0x05, 0x05, 0x06, 0x03, 0x04, 0x06,
			0x03, 0x09, 0x06, 0x04, 0x05, 0x05, 0x04, 0x05, 0x04, 0x06, 0x06, 0x09, 0x06, 0x06, 0x04, 0x07,
			0x03, 0x05, 0x0e, 0x0b, 0x20, 0x7f, 0x02, 0x00, 0x0a, 0x01, 0x01, 0x00, 0x00, 0x00, 0x40, 0x00,
			0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x20, 0x00, 0x80, 0x00, 0x20, 0x00, 0x40, 0x00,
			0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x78, 0x00, 0x60, 0x00,
			0x78, 0x00, 0x78, 0x00, 0x18, 0x00, 0xfc, 0x00, 0x78, 0x00, 0xfc, 0x00, 0x78, 0x00, 0x78, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x18, 0x00,
			0xf8, 0x00, 0x3c, 0x00, 0xf8, 0x00, 0xfc, 0x00, 0xfc, 0x00, 0x3c, 0x00, 0xf7, 0x00, 0xf0, 0x00,
			0x1e, 0x00, 0xf7, 0x00, 0xf0, 0x00, 0xe1, 0xc0, 0xe7, 0x00, 0x3c, 0x00, 0xf8, 0x00, 0x3c, 0x00,
			0xf8, 0x00, 0x70, 0x00, 0xfc, 0x00, 0xf7, 0x00, 0xf7, 0x00, 0xef, 0x70, 0xf7, 0x00, 0xf7, 0x00,
			0xfc, 0x00, 0xe0, 0x00, 0x10, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0xc0, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x40, 0x00,
			0x10, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0xfe, 0x00, 0x80, 0x00, 0x00, 0x00, 0x06, 0x00, 0x14, 0x00, 0x00, 0x00, 0x40, 0x00,
			0xa0, 0x00, 0x50, 0x00, 0x70, 0x00, 0xa8, 0x00, 0x50, 0x00, 0x80, 0x00, 0x40, 0x00, 0x20, 0x00,
			0xa8, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0xcc, 0x00, 0xe0, 0x00,
			0xcc, 0x00, 0xcc, 0x00, 0x38, 0x00, 0xc0, 0x00, 0xc4, 0x00, 0xcc, 0x00, 0xcc, 0x00, 0xcc, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x88, 0x00, 0x00, 0x00, 0x18, 0x00,
			0x64, 0x00, 0x72, 0x00, 0x64, 0x00, 0x64, 0x00, 0x64, 0x00, 0x72, 0x00, 0x62, 0x00, 0x60, 0x00,
			0x0c, 0x00, 0x62, 0x00, 0x60, 0x00, 0x71, 0x80, 0x72, 0x00, 0x72, 0x00, 0x6c, 0x00, 0x72, 0x00,
			0x64, 0x00, 0xc8, 0x00, 0xb4, 0x00, 0x62, 0x00, 0x62, 0x00, 0x66, 0x20, 0x62, 0x00, 0x62, 0x00,
			0x8c, 0x00, 0x80, 0x00, 0x28, 0x00, 0x20, 0x00, 0x04, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x40, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x28, 0x00, 0x08, 0x00, 0x40, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x92, 0x00, 0xc0, 0x00, 0x20, 0x00, 0xfb, 0x7c, 0x1e, 0x00, 0x00, 0x00, 0x40, 0x00,
			0x00, 0x00, 0xf8, 0x00, 0xd8, 0x00, 0x50, 0x00, 0x20, 0x00, 0x80, 0x00, 0x80, 0x00, 0x10, 0x00,
			0x70, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0xcc, 0x00, 0x60, 0x00,
			0x0c, 0x00, 0x18, 0x00, 0x58, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0x18, 0x00, 0xcc, 0x00, 0xcc, 0x00,
			0xc0, 0x00, 0x40, 0x00, 0x60, 0x00, 0xf8, 0x00, 0x30, 0x00, 0x10, 0x00, 0x00, 0x00, 0x3c, 0x00,
			0x64, 0x00, 0xe0, 0x00, 0x62, 0x00, 0x60, 0x00, 0x60, 0x00, 0xe0, 0x00, 0x62, 0x00, 0x60, 0x00,
			0x0c, 0x00, 0x64, 0x00, 0x60, 0x00, 0x7b, 0x80, 0x7a, 0x00, 0xe1, 0x00, 0x6c, 0x00, 0xe1, 0x00,
			0x64, 0x00, 0xe0, 0x00, 0x30, 0x00, 0x62, 0x00, 0x76, 0x00, 0x77, 0x60, 0x34, 0x00, 0x34, 0x00,
			0x18, 0x00, 0x80, 0x00, 0x4c, 0x00, 0x20, 0x00, 0x0c, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x60, 0x00,
			0x70, 0x00, 0x60, 0x00, 0x70, 0x00, 0x60, 0x00, 0x20, 0x00, 0x30, 0x00, 0x70, 0x00, 0xc0, 0x00,
			0x30, 0x00, 0x4c, 0x00, 0x40, 0x00, 0xb6, 0x00, 0xb0, 0x00, 0x60, 0x00, 0xf0, 0x00, 0x78, 0x00,
			0xb0, 0x00, 0x70, 0x00, 0xf0, 0x00, 0xd8, 0x00, 0xdc, 0x00, 0xdb, 0x80, 0xdc, 0x00, 0xdc, 0x00,
			0xf0, 0x00, 0x38, 0x00, 0x60, 0x00, 0xf8, 0x00, 0x7f, 0xf8, 0xfc, 0x00, 0x00, 0x00, 0x40, 0x00,
			0x00, 0x00, 0x50, 0x00, 0x88, 0x00, 0x30, 0x00, 0x50, 0x00, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00,
			0xa8, 0x00, 0xf8, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x20, 0x00, 0xcc, 0x00, 0x60, 0x00,
			0x38, 0x00, 0x38, 0x00, 0xfc, 0x00, 0x78, 0x00, 0xf8, 0x00, 0x38, 0x00, 0x78, 0x00, 0xcc, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x34, 0x00,
			0x78, 0x00, 0xe0, 0x00, 0x62, 0x00, 0x78, 0x00, 0x78, 0x00, 0xe0, 0x00, 0x7e, 0x00, 0x60, 0x00,
			0x0c, 0x00, 0x6c, 0x00, 0x60, 0x00, 0x5a, 0x80, 0x5e, 0x00, 0xe1, 0x00, 0x78, 0x00, 0xe1, 0x00,
			0x78, 0x00, 0x70, 0x00, 0x30, 0x00, 0x62, 0x00, 0x34, 0x00, 0x33, 0x40, 0x18, 0x00, 0x18, 0x00,
			0x30, 0x00, 0x80, 0x00, 0x9e, 0x00, 0x20, 0x00, 0xd8, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x90, 0x00,
			0x48, 0x00, 0x90, 0x00, 0x90, 0x00, 0x90, 0x00, 0x70, 0x00, 0x48, 0x00, 0x48, 0x00, 0x40, 0x00,
			0x10, 0x00, 0x58, 0x00, 0x40, 0x00, 0x49, 0x00, 0x48, 0x00, 0x90, 0x00, 0x48, 0x00, 0x90, 0x00,
			0x50, 0x00, 0xc8, 0x00, 0x40, 0x00, 0x48, 0x00, 0x48, 0x00, 0x49, 0x00, 0x48, 0x00, 0x48, 0x00,
			0xa0, 0x00, 0x7c, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x0f, 0xe0, 0x76, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0xf8, 0x00, 0xd8, 0x00, 0x68, 0x00, 0x98, 0x00, 0x00, 0x00, 0x40, 0x00, 0x20, 0x00,
			0x20, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0xcc, 0x00, 0x60, 0x00,
			0x60, 0x00, 0x1c, 0x00, 0x18, 0x00, 0x0c, 0x00, 0xcc, 0x00, 0x30, 0x00, 0xcc, 0x00, 0x7c, 0x00,
			0xc0, 0x00, 0x40, 0x00, 0x60, 0x00, 0xf8, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00,
			0x64, 0x00, 0xe0, 0x00, 0x62, 0x00, 0x60, 0x00, 0x60, 0x00, 0xe7, 0x00, 0x62, 0x00, 0x60, 0x00,
			0xcc, 0x00, 0x72, 0x00, 0x60, 0x00, 0x5e, 0x80, 0x4e, 0x00, 0xe1, 0x00, 0x60, 0x00, 0xed, 0x00,
			0x6c, 0x00, 0x38, 0x00, 0x30, 0x00, 0x62, 0x00, 0x3c, 0x00, 0x3b, 0xc0, 0x34, 0x00, 0x18, 0x00,
			0x60, 0x00, 0x80, 0x00, 0x7c, 0x00, 0x20, 0x00, 0xf0, 0x00, 0x38, 0x00, 0x00, 0x00, 0x70, 0x00,
			0x48, 0x00, 0x80, 0x00, 0x90, 0x00, 0xe0, 0x00, 0x20, 0x00, 0x48, 0x00, 0x48, 0x00, 0x40, 0x00,
			0x10, 0x00, 0x70, 0x00, 0x40, 0x00, 0x49, 0x00, 0x48, 0x00, 0x90, 0x00, 0x48, 0x00, 0x90, 0x00,
			0x40, 0x00, 0x20, 0x00, 0x40, 0x00, 0x48, 0x00, 0x48, 0x00, 0x49, 0x00, 0x30, 0x00, 0x48, 0x00,
			0x60, 0x00, 0x74, 0x00, 0x60, 0x00, 0x50, 0x00, 0x03, 0x80, 0x33, 0x00, 0x00, 0x00, 0x40, 0x00,
			0x00, 0x00, 0x50, 0x00, 0x70, 0x00, 0x90, 0x00, 0x68, 0x00, 0x00, 0x00, 0x20, 0x00, 0x40, 0x00,
			0x00, 0x00, 0x20, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0xcc, 0x00, 0x60, 0x00,
			0x64, 0x00, 0xcc, 0x00, 0x18, 0x00, 0xcc, 0x00, 0xcc, 0x00, 0x30, 0x00, 0xcc, 0x00, 0x0c, 0x00,
			0x00, 0x00, 0x40, 0x00, 0x18, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x20, 0x00, 0x00, 0x00, 0x62, 0x00,
			0x64, 0x00, 0x72, 0x00, 0x64, 0x00, 0x64, 0x00, 0x60, 0x00, 0x72, 0x00, 0x62, 0x00, 0x60, 0x00,
			0xcc, 0x00, 0x61, 0x00, 0x62, 0x00, 0x4c, 0x80, 0x46, 0x00, 0x72, 0x00, 0x60, 0x00, 0x72, 0x00,
			0x6c, 0x00, 0x98, 0x00, 0x30, 0x00, 0x62, 0x00, 0x18, 0x00, 0x1d, 0x80, 0x62, 0x00, 0x18, 0x00,
			0xc4, 0x00, 0xe0, 0x00, 0x38, 0x00, 0xe0, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x00,
			0x48, 0x00, 0x90, 0x00, 0x90, 0x00, 0x80, 0x00, 0x20, 0x00, 0x48, 0x00, 0x48, 0x00, 0x40, 0x00,
			0x10, 0x00, 0x58, 0x00, 0x40, 0x00, 0x49, 0x00, 0x48, 0x00, 0x90, 0x00, 0x48, 0x00, 0x90, 0x00,
			0x40, 0x00, 0x98, 0x00, 0x50, 0x00, 0x48, 0x00, 0x30, 0x00, 0x2a, 0x00, 0x58, 0x00, 0x30, 0x00,
			0x50, 0x00, 0x74, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x05, 0x40, 0x11, 0x80, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x78, 0x00, 0xf0, 0x00,
			0xfc, 0x00, 0x78, 0x00, 0x3c, 0x00, 0x78, 0x00, 0x78, 0x00, 0x30, 0x00, 0x78, 0x00, 0x78, 0x00,
			0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf7, 0x00,
			0xf8, 0x00, 0x3c, 0x00, 0xf8, 0x00, 0xfc, 0x00, 0xf0, 0x00, 0x3c, 0x00, 0xf7, 0x00, 0xf0, 0x00,
			0x78, 0x00, 0xf3, 0x80, 0xfe, 0x00, 0xed, 0xc0, 0xe3, 0x00, 0x3c, 0x00, 0xf0, 0x00, 0x3d, 0x80,
			0xf6, 0x00, 0x70, 0x00, 0x78, 0x00, 0x3c, 0x00, 0x18, 0x00, 0x08, 0x80, 0xf7, 0x00, 0x3c, 0x00,
			0xfc, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00,
			0xf0, 0x00, 0x60, 0x00, 0x78, 0x00, 0x60, 0x00, 0x70, 0x00, 0x38, 0x00, 0xec, 0x00, 0xe0, 0x00,
			0x10, 0x00, 0xcc, 0x00, 0xe0, 0x00, 0xe4, 0x80, 0xe4, 0x00, 0x60, 0x00, 0x70, 0x00, 0x70, 0x00,
			0xe0, 0x00, 0x70, 0x00, 0x20, 0x00, 0x3c, 0x00, 0x10, 0x00, 0x14, 0x00, 0xec, 0x00, 0x10, 0x00,
			0xf0, 0x00, 0xfa, 0x00, 0x60, 0x00, 0x00, 0x00, 0x02, 0x80, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x10, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x00,
			0x00, 0x00, 0x10, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x10, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x38, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x06, 0x0a, 0x00,
			0x0b, 0x10, 0x10, 0x07, 0x07, 0x07, 0x00, 0x00, 0x05, 0x06, 0x05, 0x10, 0x0f, 0x0a, 0x0d, 0x0d,
			0x0f, 0x0d, 0x0e, 0x0d, 0x0d, 0x0e, 0x05, 0x05, 0x00, 0x00, 0x00, 0x0d, 0x0e, 0x10, 0x10, 0x10,
			0x10, 0x10, 0x0f, 0x10, 0x10, 0x0a, 0x0d, 0x10, 0x0f, 0x10, 0x10, 0x10, 0x0e, 0x10, 0x10, 0x0d,
			0x0e, 0x10, 0x10, 0x10, 0x10, 0x0f, 0x0f, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x0e, 0x0c,
			0x0f, 0x0d, 0x0b, 0x0c, 0x10, 0x08, 0x0a, 0x10, 0x08, 0x10, 0x10, 0x0c, 0x0f, 0x0e, 0x0c, 0x0c,
			0x09, 0x10, 0x10, 0x10, 0x0f, 0x10, 0x0d, 0x20, 0x7a, 0x02, 0x00, 0x10, 0x01, 0x01, 0x00, 0x00,
			0x00, 0x70, 0x00, 0xe3, 0x80, 0x00, 0x00, 0x0c, 0x00, 0x3c, 0x06, 0x07, 0x00, 0x38, 0x00, 0x1c,
			0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x0f,
			0xc0, 0x0c, 0x00, 0x1f, 0x80, 0x1f, 0x80, 0x00, 0xe0, 0x7f, 0xe0, 0x07, 0xc0, 0xff, 0xf0, 0x0f,
			0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00,
			0x00, 0x01, 0x80, 0xff, 0xe0, 0x07, 0xe4, 0xff, 0xc0, 0xff, 0xfc, 0xff, 0xfc, 0x07, 0xe4, 0xf8,
			0x3e, 0xff, 0x80, 0x0f, 0xf0, 0xfc, 0x3e, 0xff, 0x00, 0xf0, 0x0f, 0xf0, 0x1f, 0x07, 0xe0, 0xff,
			0xc0, 0x07, 0xe0, 0xff, 0xe0, 0x1f, 0x90, 0xff, 0xf8, 0xfe, 0x3f, 0xfe, 0x1f, 0xfb, 0xe7, 0xfc,
			0x1e, 0xfc, 0x7c, 0xff, 0xfc, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0xf8,
			0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0xe3, 0x80, 0x00, 0x00, 0x0c, 0x00, 0x66,
			0x0c, 0x1c, 0xc0, 0x38, 0x00, 0x38, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x06, 0x30, 0x30, 0x1c, 0x00, 0x60, 0xe0, 0x60, 0xe0, 0x01, 0xe0, 0x7f,
			0xc0, 0x1c, 0x30, 0xff, 0xe0, 0x30, 0xc0, 0x30, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x60, 0xe0, 0x00, 0x00, 0x03, 0xc0, 0x38, 0x38, 0x1c, 0x1c, 0x38, 0x38, 0x38,
			0x1c, 0x38, 0x1c, 0x1c, 0x1c, 0x70, 0x1c, 0x1c, 0x00, 0x01, 0xc0, 0x70, 0x18, 0x38, 0x00, 0x78,
			0x0e, 0x78, 0x06, 0x1c, 0x38, 0x38, 0x70, 0x1c, 0x38, 0x38, 0x38, 0x60, 0x70, 0xe7, 0x38, 0x38,
			0x0c, 0x78, 0x06, 0x71, 0xc2, 0x78, 0x0c, 0x38, 0x30, 0xe0, 0x3c, 0x00, 0x00, 0x07, 0xf0, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00,
			0x00, 0x18, 0xc0, 0x00, 0xe0, 0x38, 0x00, 0x38, 0x00, 0x03, 0x80, 0x38, 0x00, 0x38, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0xc1,
			0x80, 0x00, 0x00, 0x3f, 0x00, 0xc3, 0x18, 0x38, 0x60, 0x18, 0x00, 0x70, 0x00, 0x38, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x60, 0x18, 0xfc, 0x00, 0xc0,
			0x70, 0xc0, 0x70, 0x02, 0xe0, 0x40, 0x00, 0x30, 0x78, 0xc0, 0xc0, 0x60, 0x60, 0x60, 0x30, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x70, 0x1f, 0xc0, 0x03, 0xe0, 0x38,
			0x1c, 0x38, 0x0c, 0x38, 0x1c, 0x38, 0x0c, 0x38, 0x0c, 0x38, 0x0c, 0x70, 0x1c, 0x1c, 0x00, 0x01,
			0xc0, 0x70, 0x30, 0x38, 0x00, 0x78, 0x1e, 0x7c, 0x06, 0x38, 0x1c, 0x38, 0x38, 0x38, 0x1c, 0x38,
			0x1c, 0xc0, 0x30, 0xc7, 0x18, 0x38, 0x0c, 0x38, 0x04, 0x71, 0xc2, 0x3c, 0x18, 0x38, 0x20, 0xc0,
			0x78, 0x00, 0x00, 0x0e, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70,
			0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x39, 0xc0, 0x1f, 0x80, 0x38, 0x00, 0x38, 0x00, 0x03,
			0x80, 0x38, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0xf8, 0x00, 0x41, 0x00, 0x00, 0x00, 0xcc, 0xc0, 0xc3, 0x30, 0x38, 0x60, 0x10,
			0x00, 0x70, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x18, 0xe0, 0x1c, 0x1c, 0x00, 0xf0, 0x70, 0xf0, 0x70, 0x04, 0xe0, 0x40, 0x00, 0x60, 0x70, 0x81,
			0x80, 0x70, 0x60, 0xe0, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0,
			0x70, 0x60, 0x30, 0x06, 0xe0, 0x38, 0x1c, 0x78, 0x04, 0x38, 0x1e, 0x38, 0x04, 0x38, 0x04, 0x78,
			0x04, 0x70, 0x1c, 0x1c, 0x00, 0x01, 0xc0, 0x70, 0x60, 0x38, 0x00, 0x7c, 0x1e, 0x7e, 0x06, 0x78,
			0x1e, 0x38, 0x38, 0x78, 0x1e, 0x38, 0x1c, 0xe0, 0x10, 0x87, 0x08, 0x38, 0x0c, 0x3c, 0x0c, 0x79,
			0xe6, 0x1e, 0x30, 0x1c, 0x60, 0x80, 0xf0, 0x00, 0x00, 0x0c, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x38, 0x00, 0x71,
			0xc0, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0xfb, 0xc0, 0x1e, 0x60, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x22, 0x00, 0x00, 0x00, 0xcc,
			0xc0, 0x66, 0x60, 0x3c, 0xc0, 0x20, 0x00, 0xe0, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe0, 0x1c, 0x1c, 0x00, 0x70, 0x70, 0x70, 0x70, 0x08,
			0xe0, 0x40, 0x00, 0xe0, 0x00, 0x03, 0x00, 0x7c, 0xc0, 0xe0, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x70, 0xcf, 0x98, 0x04, 0x70, 0x38, 0x1c, 0x70, 0x00, 0x38,
			0x0e, 0x38, 0x40, 0x38, 0x40, 0x70, 0x00, 0x70, 0x1c, 0x1c, 0x00, 0x01, 0xc0, 0x70, 0xc0, 0x38,
			0x00, 0x7c, 0x3e, 0x6f, 0x06, 0x70, 0x0e, 0x38, 0x38, 0x70, 0x0e, 0x38, 0x1c, 0xf8, 0x00, 0x07,
			0x00, 0x38, 0x0c, 0x1c, 0x08, 0x38, 0xe6, 0x0f, 0x60, 0x1c, 0x40, 0x01, 0xe0, 0x00, 0x00, 0x0c,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x77, 0x80, 0x0f, 0x80, 0x0f,
			0x70, 0x0f, 0x80, 0xff, 0x00, 0xe0, 0xe0, 0x3b, 0xc0, 0xf8, 0x00, 0x0f, 0x80, 0x39, 0xfc, 0x38,
			0x00, 0xfb, 0x38, 0xf9, 0xe0, 0x1f, 0x00, 0x3c, 0x70, 0x71, 0xe0, 0xfb, 0x80, 0x1e, 0x80, 0xff,
			0x00, 0xf8, 0xf8, 0xfc, 0x1e, 0xf3, 0xcf, 0xfc, 0x78, 0xfe, 0x3f, 0x7f, 0xf0, 0x00, 0x00, 0xf8,
			0x00, 0x00, 0x00, 0x00, 0x00, 0xec, 0x00, 0x3c, 0xc0, 0x1f, 0x80, 0x00, 0x00, 0xe0, 0x00, 0x1c,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xe0, 0x1c, 0x1c,
			0x00, 0x00, 0xe0, 0x00, 0xe0, 0x10, 0xe0, 0x5f, 0x00, 0xe7, 0x80, 0x06, 0x00, 0x3f, 0x80, 0xe0,
			0x38, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xd9, 0x98, 0x0c,
			0x70, 0x38, 0x38, 0xf0, 0x00, 0x38, 0x0f, 0x38, 0xc0, 0x38, 0xc0, 0xf0, 0x00, 0x70, 0x1c, 0x1c,
			0x00, 0x01, 0xc0, 0x71, 0x80, 0x38, 0x00, 0x6e, 0x2e, 0x67, 0x86, 0xf0, 0x0f, 0x38, 0x38, 0xf0,
			0x0f, 0x38, 0x1c, 0x7f, 0x00, 0x07, 0x00, 0x38, 0x0c, 0x1e, 0x18, 0x3c, 0xe4, 0x07, 0xc0, 0x0e,
			0xc0, 0x03, 0xc0, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
			0xc0, 0x78, 0xe0, 0x38, 0x60, 0x38, 0xf0, 0x30, 0x60, 0x38, 0x00, 0xe0, 0xe0, 0x3c, 0x70, 0x38,
			0x00, 0x03, 0x80, 0x38, 0x60, 0x38, 0x00, 0x3f, 0xbc, 0x3e, 0x30, 0x71, 0xc0, 0x38, 0x38, 0xe0,
			0xe0, 0x3e, 0x60, 0x61, 0x80, 0x38, 0x00, 0x38, 0x38, 0x38, 0x0c, 0xe1, 0x87, 0x38, 0x20, 0x1c,
			0x08, 0x60, 0xe0, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x01, 0x80, 0x0f,
			0x3f, 0x00, 0x00, 0xe0, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00,
			0x00, 0x00, 0xc0, 0xe0, 0x1c, 0x1c, 0x00, 0x01, 0xc0, 0x07, 0xc0, 0x20, 0xe0, 0x60, 0xc0, 0xf8,
			0x60, 0x0e, 0x00, 0x1f, 0xc0, 0x60, 0x78, 0x70, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x03, 0xc0, 0xd9, 0x98, 0x08, 0x38, 0x3f, 0xf0, 0xf0, 0x00, 0x38, 0x0f, 0x3f, 0xc0, 0x3f,
			0xc0, 0xf0, 0x00, 0x7f, 0xfc, 0x1c, 0x00, 0x01, 0xc0, 0x73, 0x80, 0x38, 0x00, 0x6e, 0x6e, 0x63,
			0xc6, 0xf0, 0x0f, 0x38, 0x70, 0xf0, 0x0f, 0x38, 0x38, 0x1f, 0xe0, 0x07, 0x00, 0x38, 0x0c, 0x0e,
			0x10, 0x3c, 0xe4, 0x03, 0x80, 0x0e, 0x80, 0x07, 0x80, 0x00, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xe0, 0x70, 0x70, 0x70, 0xe0, 0x70, 0x70, 0x60, 0x70, 0x38,
			0x00, 0xe0, 0xe0, 0x38, 0x38, 0x38, 0x00, 0x03, 0x80, 0x38, 0xc0, 0x38, 0x00, 0x3d, 0xee, 0x3c,
			0x38, 0xe0, 0xe0, 0x38, 0x1c, 0xc0, 0xe0, 0x3c, 0xe0, 0xe0, 0x80, 0x38, 0x00, 0x38, 0x38, 0x1c,
			0x18, 0x71, 0x8e, 0x1c, 0x40, 0x1c, 0x10, 0x41, 0xc0, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x3f, 0x00, 0x03, 0x00, 0x1f, 0x8e, 0x00, 0x00, 0xe0, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x01, 0x80, 0xe0, 0x1c, 0x1c, 0x00, 0x07, 0x00, 0x00,
			0xf0, 0x40, 0xe0, 0x40, 0x60, 0xf0, 0x30, 0x0c, 0x00, 0x73, 0xe0, 0x30, 0xf8, 0x00, 0x00, 0x70,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0xd9, 0x98, 0x18, 0x38, 0x38, 0x1c, 0xf0,
			0x00, 0x38, 0x0f, 0x38, 0xc0, 0x38, 0xc0, 0xf0, 0x00, 0x70, 0x1c, 0x1c, 0x00, 0x01, 0xc0, 0x77,
			0xc0, 0x38, 0x00, 0x67, 0x4e, 0x61, 0xe6, 0xf0, 0x0f, 0x3f, 0xc0, 0xf0, 0x0f, 0x3f, 0xe0, 0x03,
			0xf0, 0x07, 0x00, 0x38, 0x0c, 0x0f, 0x30, 0x1e, 0xf4, 0x03, 0xc0, 0x07, 0x00, 0x0f, 0x00, 0x00,
			0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x70, 0x38, 0xe0,
			0x00, 0xe0, 0x70, 0xe0, 0x70, 0x38, 0x00, 0x71, 0xc0, 0x38, 0x38, 0x38, 0x00, 0x03, 0x80, 0x39,
			0x80, 0x38, 0x00, 0x39, 0xce, 0x38, 0x38, 0xe0, 0xe0, 0x38, 0x1c, 0xc0, 0xe0, 0x38, 0x00, 0xf0,
			0x00, 0x38, 0x00, 0x38, 0x38, 0x1c, 0x10, 0x73, 0xce, 0x0e, 0x80, 0x0e, 0x10, 0x03, 0x80, 0x00,
			0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x06, 0x78, 0x7b, 0xcc, 0x00, 0x00, 0xe0,
			0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0xe0,
			0x1c, 0x1c, 0x00, 0x1c, 0x00, 0x00, 0x78, 0x80, 0xe0, 0x00, 0x70, 0xe0, 0x38, 0x1c, 0x00, 0xe0,
			0xf0, 0x0f, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0xd9,
			0x98, 0x1f, 0xfc, 0x38, 0x0e, 0xf0, 0x00, 0x38, 0x0f, 0x38, 0x40, 0x38, 0x40, 0xf0, 0x7f, 0x70,
			0x1c, 0x1c, 0x00, 0x01, 0xc0, 0x7d, 0xe0, 0x38, 0x00, 0x67, 0xce, 0x60, 0xf6, 0xf0, 0x0f, 0x38,
			0x00, 0xf0, 0x0f, 0x38, 0x38, 0x00, 0x78, 0x07, 0x00, 0x38, 0x0c, 0x07, 0x20, 0x1e, 0xfc, 0x07,
			0xe0, 0x07, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x0f, 0xe0, 0x70, 0x38, 0xe0, 0x00, 0xe0, 0x70, 0xff, 0xf0, 0x38, 0x00, 0x3f, 0x00, 0x38,
			0x38, 0x38, 0x00, 0x03, 0x80, 0x3b, 0x80, 0x38, 0x00, 0x39, 0xce, 0x38, 0x38, 0xe0, 0xe0, 0x38,
			0x1c, 0xc0, 0xe0, 0x38, 0x00, 0x7e, 0x00, 0x38, 0x00, 0x38, 0x38, 0x0e, 0x30, 0x3b, 0xdc, 0x07,
			0x00, 0x0e, 0x20, 0x07, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0xe0, 0x0c,
			0xcc, 0xf1, 0xe8, 0x00, 0x00, 0xe0, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x06, 0x00, 0xe0, 0x1c, 0x1c, 0x00, 0x30, 0x00, 0x70, 0x38, 0xff, 0xfc, 0x70,
			0x70, 0xe0, 0x38, 0x1c, 0x00, 0xc0, 0x70, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x08, 0x00, 0xce, 0xf0, 0x30, 0x1c, 0x38, 0x0e, 0x70, 0x00, 0x38, 0x0e, 0x38,
			0x00, 0x38, 0x00, 0x70, 0x1c, 0x70, 0x1c, 0x1c, 0x00, 0x71, 0xc0, 0x78, 0xf0, 0x38, 0x00, 0x63,
			0x8e, 0x60, 0x7e, 0x70, 0x0e, 0x38, 0x00, 0x70, 0x0e, 0x38, 0x1c, 0x80, 0x38, 0x07, 0x00, 0x38,
			0x0c, 0x07, 0xe0, 0x1f, 0x78, 0x0c, 0xf0, 0x07, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xe0, 0x70, 0x38, 0xe0, 0x00, 0xe0, 0x70, 0xe0,
			0x00, 0x38, 0x00, 0x70, 0x00, 0x38, 0x38, 0x38, 0x00, 0x03, 0x80, 0x3d, 0xc0, 0x38, 0x00, 0x39,
			0xce, 0x38, 0x38, 0xe0, 0xe0, 0x38, 0x1c, 0xc0, 0xe0, 0x38, 0x00, 0x1f, 0x80, 0x38, 0x00, 0x38,
			0x38, 0x0e, 0x20, 0x3e, 0x7c, 0x07, 0x80, 0x07, 0x20, 0x0e, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00,
			0x00, 0x00, 0x00, 0xcc, 0xe0, 0x19, 0x86, 0xf0, 0xf8, 0x00, 0x00, 0xe0, 0x00, 0x1c, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0xe0, 0x1c, 0x1c, 0x00, 0x60,
			0x10, 0xf0, 0x38, 0x00, 0xe0, 0xf0, 0x70, 0x60, 0x38, 0x1c, 0x00, 0xc0, 0x70, 0x70, 0x30, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x60, 0x00, 0x20, 0x0e, 0x38,
			0x0e, 0x78, 0x00, 0x38, 0x1e, 0x38, 0x04, 0x38, 0x00, 0x78, 0x1c, 0x70, 0x1c, 0x1c, 0x00, 0xf1,
			0xc0, 0x70, 0x78, 0x38, 0x04, 0x63, 0x8e, 0x60, 0x3e, 0x78, 0x1e, 0x38, 0x00, 0x73, 0x9e, 0x38,
			0x1c, 0x80, 0x18, 0x07, 0x00, 0x38, 0x0c, 0x03, 0xc0, 0x0f, 0x78, 0x18, 0x78, 0x07, 0x00, 0x78,
			0x04, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xe0, 0x70,
			0x38, 0xe0, 0x00, 0xe0, 0x70, 0xe0, 0x00, 0x38, 0x00, 0x3f, 0x80, 0x38, 0x38, 0x38, 0x00, 0x03,
			0x80, 0x38, 0xe0, 0x38, 0x00, 0x39, 0xce, 0x38, 0x38, 0xe0, 0xe0, 0x38, 0x38, 0xe0, 0xe0, 0x38,
			0x00, 0x83, 0xc0, 0x38, 0x00, 0x38, 0x38, 0x07, 0x60, 0x1e, 0x78, 0x09, 0xc0, 0x07, 0x40, 0x1c,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xcc, 0xc0, 0x31, 0x86, 0xf0, 0x79, 0x00,
			0x00, 0xe0, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
			0x00, 0x60, 0x18, 0x1c, 0x00, 0xc0, 0x30, 0xc0, 0x30, 0x00, 0xe0, 0xc0, 0x60, 0x70, 0x30, 0x1c,
			0x00, 0xe0, 0x60, 0xf0, 0x60, 0x70, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x1f, 0xc0, 0x60, 0x0e, 0x38, 0x0e, 0x38, 0x04, 0x38, 0x1c, 0x38, 0x0c, 0x38, 0x00, 0x38,
			0x1c, 0x70, 0x1c, 0x1c, 0x00, 0x81, 0xc0, 0x70, 0x3c, 0x38, 0x0c, 0x61, 0x0e, 0x60, 0x1e, 0x38,
			0x1c, 0x38, 0x00, 0x3c, 0x5c, 0x38, 0x1c, 0xc0, 0x10, 0x07, 0x00, 0x38, 0x0c, 0x03, 0xc0, 0x0f,
			0x70, 0x30, 0x3c, 0x07, 0x00, 0xf0, 0x0c, 0x00, 0x00, 0xcf, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0xe0, 0xe0, 0x70, 0x70, 0x70, 0x00, 0x70, 0x70, 0x60, 0x30, 0x38, 0x00, 0xe0,
			0xe0, 0x38, 0x38, 0x38, 0x00, 0x03, 0x80, 0x38, 0x70, 0x38, 0x00, 0x39, 0xce, 0x38, 0x38, 0xe0,
			0xe0, 0x3c, 0x70, 0x71, 0xe0, 0x38, 0x00, 0xc1, 0xc0, 0x38, 0x00, 0x38, 0x38, 0x07, 0xc0, 0x1e,
			0x78, 0x10, 0xe0, 0x03, 0xc0, 0x38, 0x10, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f,
			0x00, 0x60, 0xcc, 0x78, 0x3f, 0x00, 0x00, 0x70, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70,
			0x00, 0x00, 0x00, 0xe0, 0x00, 0x30, 0x00, 0x30, 0x30, 0x1c, 0x00, 0xff, 0xf0, 0x60, 0x60, 0x00,
			0xe0, 0x60, 0xc0, 0x38, 0x60, 0x1c, 0x00, 0x70, 0xc0, 0x60, 0xc0, 0x70, 0x00, 0x70, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0xe0, 0x0f, 0x38, 0x1c, 0x1c, 0x18, 0x38,
			0x38, 0x38, 0x1c, 0x38, 0x00, 0x1c, 0x3c, 0x70, 0x1c, 0x1c, 0x00, 0xc3, 0x80, 0x70, 0x1e, 0x38,
			0x1c, 0x60, 0x0e, 0x60, 0x0e, 0x1c, 0x38, 0x38, 0x00, 0x1c, 0x78, 0x38, 0x1c, 0xf0, 0x60, 0x07,
			0x00, 0x1c, 0x18, 0x01, 0x80, 0x06, 0x30, 0x70, 0x1e, 0x07, 0x00, 0xe0, 0x1c, 0x00, 0x00, 0xcd,
			0xe4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x68, 0x78, 0xe0, 0x38, 0x60, 0x38,
			0xb0, 0x30, 0x60, 0x38, 0x00, 0xc0, 0x70, 0x38, 0x38, 0x38, 0x00, 0xe3, 0x80, 0x38, 0x38, 0x38,
			0x00, 0x39, 0xce, 0x38, 0x38, 0x71, 0xc0, 0x3b, 0xc0, 0x1e, 0xe0, 0x38, 0x00, 0xe1, 0x80, 0x39,
			0x00, 0x1c, 0x78, 0x03, 0xc0, 0x0c, 0x30, 0x20, 0x70, 0x03, 0x80, 0x70, 0x30, 0x00, 0x00, 0x70,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0xc0, 0x78, 0x1f, 0xce, 0x00, 0x00, 0x70, 0x00, 0x38,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x60, 0x00, 0x0f, 0xc0, 0xff,
			0x80, 0xff, 0xf0, 0x1f, 0x80, 0x03, 0xf8, 0x1f, 0x00, 0x0f, 0x80, 0x0c, 0x00, 0x1f, 0x00, 0x1f,
			0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0xf8,
			0x3f, 0xff, 0xf0, 0x07, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0xff, 0x00, 0x07, 0xcc, 0xf8, 0x3e, 0xff,
			0x80, 0x3e, 0x00, 0xfc, 0x7f, 0xff, 0xfc, 0xf8, 0x3f, 0xf8, 0x06, 0x07, 0xe0, 0xff, 0x00, 0x07,
			0xe0, 0xfe, 0x0f, 0x8f, 0x80, 0x3f, 0xe0, 0x07, 0xe0, 0x01, 0x80, 0x06, 0x30, 0xf8, 0x3f, 0x1f,
			0xc0, 0xff, 0xfc, 0x00, 0x00, 0x78, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e,
			0x30, 0x67, 0x80, 0x0f, 0x80, 0x0f, 0x3c, 0x0f, 0x80, 0xfe, 0x00, 0xc0, 0x70, 0xfe, 0x3e, 0xfe,
			0x00, 0xc3, 0x80, 0xfe, 0x7e, 0xfe, 0x00, 0xfd, 0xef, 0xfe, 0x3e, 0x1f, 0x00, 0x38, 0x00, 0x00,
			0xe0, 0xfe, 0x00, 0x9e, 0x00, 0x1e, 0x00, 0x07, 0x9e, 0x01, 0x80, 0x0c, 0x30, 0xf8, 0xfc, 0xe3,
			0x80, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x38, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00,
			0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0xe0, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0xe7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00,
			0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x02, 0x03, 0x06, 0x06, 0x03, 0x05, 0x02, 0x10, 0x10,
			0x10, 0x04, 0x10, 0x10, 0x0e, 0x00, 0x0a, 0x0a, 0x09, 0x0a, 0x09, 0x08, 0x0a, 0x09, 0x08, 0x09,
			0x02, 0x02, 0x05, 0x05, 0x05, 0x05, 0x05, 0x09, 0x08, 0x07, 0x08, 0x07, 0x07, 0x07, 0x09, 0x04,
			0x08, 0x09, 0x07, 0x0d, 0x09, 0x07, 0x09, 0x07, 0x09, 0x07, 0x08, 0x09, 0x09, 0x0d, 0x09, 0x0a,
			0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x06, 0x08, 0x06, 0x07, 0x07, 0x09, 0x04,
			0x03, 0x08, 0x04, 0x0e, 0x09, 0x07, 0x08, 0x08, 0x08, 0x07, 0x07, 0x09, 0x09, 0x0d, 0x09, 0x09,
			0x09, 0x03, 0x03, 0x03, 0x20, 0x7d, 0x02, 0x00, 0x10, 0x01, 0x01, 0x00, 0x00, 0x00, 0x40, 0x00,
			0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x80,
			0x1c, 0x00, 0x17, 0x00, 0x01, 0x00, 0x1f, 0x00, 0x01, 0x80, 0x3f, 0x80, 0x3c, 0x00, 0x1e, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x18, 0x00,
			0xfc, 0x00, 0x3a, 0x00, 0xfc, 0x00, 0xfe, 0x00, 0xfe, 0x00, 0x3a, 0x00, 0xf7, 0x80, 0xf0, 0x00,
			0x0f, 0x00, 0xf6, 0x00, 0xf0, 0x00, 0xe0, 0x38, 0xc3, 0x80, 0x38, 0x00, 0x7e, 0x00, 0x38, 0x00,
			0xfc, 0x00, 0x3a, 0x00, 0xff, 0x00, 0xf3, 0x80, 0xf3, 0x80, 0xe3, 0x38, 0xf3, 0x80, 0xf1, 0xc0,
			0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0xe0, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00,
			0x00, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0xa0, 0x00, 0x50, 0x00,
			0x70, 0x00, 0x00, 0x00, 0x50, 0x00, 0xc0, 0x00, 0x07, 0xf0, 0x01, 0xf8, 0x00, 0x7f, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x80, 0x01, 0x80, 0x36, 0x00, 0x19, 0x80,
			0x03, 0x00, 0x30, 0x00, 0x07, 0x00, 0x3f, 0x80, 0x66, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x18, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x88, 0x00, 0x00, 0x00, 0x18, 0x00, 0x66, 0x00, 0x66, 0x00,
			0x66, 0x00, 0x66, 0x00, 0x66, 0x00, 0x66, 0x00, 0x63, 0x00, 0x60, 0x00, 0x06, 0x00, 0x66, 0x00,
			0x60, 0x00, 0x60, 0x30, 0xc1, 0x00, 0x6c, 0x00, 0x33, 0x00, 0x6c, 0x00, 0x66, 0x00, 0x66, 0x00,
			0xdb, 0x00, 0x61, 0x00, 0x61, 0x00, 0x63, 0x10, 0x63, 0x00, 0x60, 0x80, 0xc3, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
			0x06, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00,
			0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0xf8, 0x00, 0xd8, 0x00, 0x00, 0x00,
			0x20, 0x00, 0x40, 0x00, 0x38, 0x0e, 0x0e, 0x03, 0x83, 0x80, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x18, 0xc0, 0x03, 0x80, 0x23, 0x00, 0x10, 0xc0, 0x07, 0x00, 0x30, 0x00,
			0x0c, 0x00, 0x21, 0x00, 0xc3, 0x00, 0x61, 0x80, 0xc0, 0x00, 0x40, 0x00, 0x60, 0x00, 0xf8, 0x00,
			0x30, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x63, 0x00, 0xc2, 0x00, 0x63, 0x00, 0x62, 0x00,
			0x62, 0x00, 0xc6, 0x00, 0x63, 0x00, 0x60, 0x00, 0x06, 0x00, 0x6c, 0x00, 0x60, 0x00, 0x70, 0x70,
			0x61, 0x00, 0xc6, 0x00, 0x31, 0x80, 0xc6, 0x00, 0x63, 0x00, 0xc2, 0x00, 0x99, 0x00, 0x61, 0x00,
			0x61, 0x00, 0x63, 0x10, 0x62, 0x00, 0x31, 0x00, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
			0x6e, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x60, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x50, 0x00, 0x88, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00,
			0x40, 0x01, 0x10, 0x00, 0x44, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x18, 0xc0, 0x01, 0x80, 0x73, 0x00, 0x10, 0xc0, 0x07, 0x00, 0x60, 0x00, 0x18, 0x00, 0x21, 0x00,
			0xc3, 0x00, 0x61, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x08, 0x00, 0x20, 0x00,
			0x00, 0x00, 0x2c, 0x00, 0x63, 0x00, 0xc2, 0x00, 0x63, 0x00, 0x62, 0x00, 0x62, 0x00, 0xc2, 0x00,
			0x63, 0x00, 0x60, 0x00, 0x06, 0x00, 0x6c, 0x00, 0x60, 0x00, 0x70, 0x70, 0x61, 0x00, 0xc6, 0x00,
			0x31, 0x80, 0xc6, 0x00, 0x63, 0x00, 0xe2, 0x00, 0x99, 0x00, 0x61, 0x00, 0x61, 0x00, 0x63, 0x10,
			0x34, 0x00, 0x31, 0x00, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00,
			0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0xf8, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x18, 0xc0, 0x01, 0x80,
			0x23, 0x00, 0x00, 0xc0, 0x0b, 0x00, 0x60, 0x00, 0x18, 0x00, 0x02, 0x00, 0xc3, 0x00, 0x61, 0x80,
			0xc0, 0x00, 0x40, 0x00, 0x60, 0x00, 0xf8, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x00,
			0x63, 0x00, 0xc0, 0x00, 0x63, 0x00, 0x60, 0x00, 0x60, 0x00, 0xc2, 0x00, 0x63, 0x00, 0x60, 0x00,
			0x06, 0x00, 0x78, 0x00, 0x60, 0x00, 0x58, 0xb0, 0x71, 0x00, 0xc6, 0x00, 0x31, 0x80, 0xc6, 0x00,
			0x63, 0x00, 0x60, 0x00, 0x18, 0x00, 0x61, 0x00, 0x62, 0x00, 0x33, 0x10, 0x34, 0x00, 0x1a, 0x00,
			0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x60, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x60, 0x00, 0x0c, 0x00, 0x60, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x60, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x50, 0x00,
			0x70, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x07, 0xf7, 0x0e, 0xff, 0x7e, 0x0c, 0x00, 0x00,
			0x4f, 0xe0, 0x03, 0x00, 0x1f, 0xc8, 0x00, 0x00, 0x18, 0xc0, 0x01, 0x80, 0x06, 0x00, 0x01, 0x80,
			0x0b, 0x00, 0xfc, 0x00, 0x30, 0x00, 0x02, 0x00, 0x66, 0x00, 0x61, 0x80, 0x00, 0x00, 0x40, 0x00,
			0x18, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x20, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x66, 0x00, 0xc0, 0x00,
			0x63, 0x00, 0x64, 0x00, 0x64, 0x00, 0xc0, 0x00, 0x63, 0x00, 0x60, 0x00, 0x06, 0x00, 0x78, 0x00,
			0x60, 0x00, 0x58, 0xb0, 0x71, 0x00, 0xc6, 0x00, 0x31, 0x80, 0xc6, 0x00, 0x63, 0x00, 0x70, 0x00,
			0x18, 0x00, 0x61, 0x00, 0x36, 0x00, 0x35, 0xa0, 0x18, 0x00, 0x1e, 0x00, 0x0c, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x7c, 0x00, 0x34, 0x00,
			0x3e, 0x00, 0x30, 0x00, 0x60, 0x00, 0x38, 0x00, 0x7c, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0x6e, 0x00,
			0x60, 0x00, 0xec, 0x60, 0xec, 0x00, 0x38, 0x00, 0xfc, 0x00, 0x3f, 0x00, 0xee, 0x00, 0x7a, 0x00,
			0xf8, 0x00, 0xe7, 0x80, 0xf3, 0x80, 0xf7, 0x38, 0xf3, 0x80, 0xf3, 0x80, 0xff, 0x80, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x07, 0xf3, 0x9c, 0xff, 0x7f, 0x0c, 0x00, 0x00, 0x30, 0x1f, 0x84, 0xc7,
			0xe0, 0x30, 0x00, 0x00, 0x18, 0xc0, 0x01, 0x80, 0x0e, 0x00, 0x07, 0x00, 0x13, 0x00, 0x06, 0x00,
			0x37, 0x00, 0x0f, 0x00, 0x3c, 0x00, 0x33, 0x80, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x7c, 0x00, 0xc0, 0x00, 0x63, 0x00, 0x7c, 0x00,
			0x7c, 0x00, 0xc0, 0x00, 0x7f, 0x00, 0x60, 0x00, 0x06, 0x00, 0x78, 0x00, 0x60, 0x00, 0x4d, 0x30,
			0x59, 0x00, 0xc6, 0x00, 0x31, 0x80, 0xc6, 0x00, 0x66, 0x00, 0x38, 0x00, 0x18, 0x00, 0x61, 0x00,
			0x32, 0x00, 0x35, 0xa0, 0x18, 0x00, 0x0c, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x76, 0x00, 0x6c, 0x00, 0x6e, 0x00, 0x68, 0x00,
			0x60, 0x00, 0x6c, 0x00, 0x76, 0x00, 0x60, 0x00, 0x60, 0x00, 0x64, 0x00, 0x60, 0x00, 0x76, 0xb0,
			0x76, 0x00, 0x6c, 0x00, 0x66, 0x00, 0x66, 0x00, 0x77, 0x00, 0xc6, 0x00, 0x60, 0x00, 0x63, 0x00,
			0x61, 0x00, 0x66, 0x10, 0x61, 0x00, 0x61, 0x00, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x06, 0x01, 0xf8, 0x18, 0x63, 0x1e, 0x00, 0x00, 0x0f, 0xe0, 0x64, 0x58, 0x1f, 0xc0, 0x00, 0x00,
			0x18, 0xc0, 0x01, 0x80, 0x1c, 0x00, 0x01, 0x80, 0x13, 0x00, 0x03, 0x00, 0x39, 0x80, 0x04, 0x00,
			0x66, 0x00, 0x1d, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x26, 0x00, 0x66, 0x00, 0xc0, 0x00, 0x63, 0x00, 0x64, 0x00, 0x64, 0x00, 0xce, 0x00,
			0x63, 0x00, 0x60, 0x00, 0x06, 0x00, 0x7c, 0x00, 0x60, 0x00, 0x4d, 0x30, 0x59, 0x00, 0xc6, 0x00,
			0x33, 0x00, 0xc6, 0x00, 0x7c, 0x00, 0x1c, 0x00, 0x18, 0x00, 0x61, 0x00, 0x32, 0x00, 0x35, 0xa0,
			0x1c, 0x00, 0x0c, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x06, 0x00, 0x63, 0x00, 0xc4, 0x00, 0xc6, 0x00, 0xc4, 0x00, 0x60, 0x00, 0xc6, 0x00,
			0x63, 0x00, 0x60, 0x00, 0x60, 0x00, 0x68, 0x00, 0x60, 0x00, 0x63, 0x18, 0x63, 0x00, 0xc6, 0x00,
			0x63, 0x00, 0xc6, 0x00, 0x62, 0x00, 0xe2, 0x00, 0x60, 0x00, 0x63, 0x00, 0x61, 0x00, 0x66, 0x10,
			0x32, 0x00, 0x61, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0xf0, 0x18,
			0x7f, 0x1e, 0x00, 0x00, 0x04, 0x1f, 0x14, 0xa3, 0xe0, 0x80, 0x00, 0x00, 0x18, 0xc0, 0x01, 0x80,
			0x18, 0x00, 0x00, 0xc0, 0x23, 0x00, 0x03, 0x00, 0x30, 0xc0, 0x08, 0x00, 0xc3, 0x00, 0x01, 0x80,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00,
			0x63, 0x00, 0xc0, 0x00, 0x63, 0x00, 0x60, 0x00, 0x60, 0x00, 0xc6, 0x00, 0x63, 0x00, 0x60, 0x00,
			0x06, 0x00, 0x6c, 0x00, 0x60, 0x00, 0x46, 0x30, 0x4d, 0x00, 0xc6, 0x00, 0x3e, 0x00, 0xc6, 0x00,
			0x7c, 0x00, 0x0c, 0x00, 0x18, 0x00, 0x61, 0x00, 0x34, 0x00, 0x35, 0xa0, 0x1c, 0x00, 0x0c, 0x00,
			0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00,
			0x63, 0x00, 0xc0, 0x00, 0xc6, 0x00, 0xfc, 0x00, 0x70, 0x00, 0xc6, 0x00, 0x63, 0x00, 0x60, 0x00,
			0x60, 0x00, 0x70, 0x00, 0x60, 0x00, 0x63, 0x18, 0x63, 0x00, 0xc6, 0x00, 0x63, 0x00, 0xc6, 0x00,
			0x60, 0x00, 0x70, 0x00, 0x60, 0x00, 0x63, 0x00, 0x32, 0x00, 0x33, 0x20, 0x1c, 0x00, 0x32, 0x00,
			0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0xf0, 0x18, 0x7e, 0x33, 0x00, 0x00,
			0x02, 0x00, 0x88, 0x44, 0x01, 0x00, 0x00, 0x00, 0x18, 0xc0, 0x01, 0x80, 0x30, 0x00, 0x00, 0xc0,
			0x3f, 0x80, 0x03, 0x00, 0x30, 0xc0, 0x08, 0x00, 0xc3, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x63, 0x00, 0xc0, 0x00,
			0x63, 0x00, 0x60, 0x00, 0x60, 0x00, 0xc6, 0x00, 0x63, 0x00, 0x60, 0x00, 0x46, 0x00, 0x66, 0x00,
			0x60, 0x00, 0x46, 0x30, 0x4d, 0x00, 0xc6, 0x00, 0x30, 0x00, 0xc6, 0x00, 0x6e, 0x00, 0x8e, 0x00,
			0x18, 0x00, 0x61, 0x00, 0x34, 0x00, 0x1d, 0xa0, 0x26, 0x00, 0x0c, 0x00, 0x30, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x00, 0x63, 0x00, 0xc0, 0x00,
			0xc6, 0x00, 0xc0, 0x00, 0x60, 0x00, 0x6c, 0x00, 0x63, 0x00, 0x60, 0x00, 0x60, 0x00, 0x70, 0x00,
			0x60, 0x00, 0x63, 0x18, 0x63, 0x00, 0xc6, 0x00, 0x63, 0x00, 0xc6, 0x00, 0x60, 0x00, 0x38, 0x00,
			0x60, 0x00, 0x63, 0x00, 0x32, 0x00, 0x33, 0x20, 0x08, 0x00, 0x32, 0x00, 0x18, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x06, 0x01, 0xf8, 0x18, 0x7c, 0x3f, 0x00, 0x00, 0x01, 0x80, 0x08, 0x40,
			0x06, 0x00, 0x00, 0x00, 0x18, 0xc0, 0x01, 0x80, 0x30, 0x80, 0x00, 0xc0, 0x03, 0x00, 0x03, 0x00,
			0x30, 0xc0, 0x10, 0x00, 0xc3, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x63, 0x00, 0xc0, 0x00, 0x63, 0x00, 0x62, 0x00,
			0x60, 0x00, 0xc6, 0x00, 0x63, 0x00, 0x60, 0x00, 0xe6, 0x00, 0x66, 0x00, 0x62, 0x00, 0x40, 0x30,
			0x47, 0x00, 0xc6, 0x00, 0x30, 0x00, 0xc6, 0x00, 0x66, 0x00, 0x86, 0x00, 0x18, 0x00, 0x61, 0x00,
			0x1c, 0x00, 0x1c, 0xe0, 0x26, 0x00, 0x0c, 0x00, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x63, 0x00, 0xc0, 0x00, 0xc6, 0x00, 0xc0, 0x00,
			0x60, 0x00, 0x78, 0x00, 0x63, 0x00, 0x60, 0x00, 0x60, 0x00, 0x78, 0x00, 0x60, 0x00, 0x63, 0x18,
			0x63, 0x00, 0xc6, 0x00, 0x63, 0x00, 0xc6, 0x00, 0x60, 0x00, 0x1c, 0x00, 0x60, 0x00, 0x63, 0x00,
			0x1c, 0x00, 0x1d, 0xc0, 0x1c, 0x00, 0x1c, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x07, 0xf3, 0x9c, 0x18, 0x6e, 0x7f, 0x80, 0x00, 0x00, 0x70, 0x18, 0x60, 0x38, 0x00, 0x00, 0x00,
			0x18, 0xc0, 0x01, 0x80, 0x60, 0x80, 0x10, 0xc0, 0x03, 0x00, 0x83, 0x00, 0x30, 0xc0, 0x10, 0x00,
			0xc3, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x43, 0x00, 0x63, 0x00, 0xc2, 0x00, 0x63, 0x00, 0x62, 0x00, 0x60, 0x00, 0xc4, 0x00,
			0x63, 0x00, 0x60, 0x00, 0x46, 0x00, 0x63, 0x00, 0x62, 0x00, 0x40, 0x30, 0x47, 0x00, 0xc6, 0x00,
			0x30, 0x00, 0xce, 0x00, 0x67, 0x00, 0xc6, 0x00, 0x18, 0x00, 0x61, 0x00, 0x1c, 0x00, 0x18, 0xc0,
			0x43, 0x00, 0x0c, 0x00, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0xc6, 0x00, 0x63, 0x00, 0xc0, 0x00, 0xc6, 0x00, 0xc0, 0x00, 0x60, 0x00, 0x80, 0x00,
			0x63, 0x00, 0x60, 0x00, 0x60, 0x00, 0x6c, 0x00, 0x60, 0x00, 0x63, 0x18, 0x63, 0x00, 0xc6, 0x00,
			0x63, 0x00, 0xc6, 0x00, 0x60, 0x00, 0x0e, 0x00, 0x64, 0x00, 0x63, 0x00, 0x1c, 0x00, 0x1d, 0xc0,
			0x26, 0x00, 0x1c, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf7, 0x0e, 0x18,
			0x67, 0x61, 0x80, 0x00, 0x00, 0x0f, 0xeb, 0x5f, 0xc0, 0x00, 0x00, 0x00, 0x0d, 0x80, 0x01, 0x80,
			0x61, 0x80, 0x19, 0x80, 0x03, 0x00, 0xc6, 0x00, 0x19, 0x80, 0x20, 0x00, 0x66, 0x00, 0x1c, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00,
			0x66, 0x00, 0x66, 0x00, 0x66, 0x00, 0x66, 0x00, 0x60, 0x00, 0x6c, 0x00, 0x63, 0x00, 0x60, 0x00,
			0x6c, 0x00, 0x63, 0x00, 0x66, 0x00, 0x40, 0x30, 0x43, 0x00, 0x6c, 0x00, 0x30, 0x00, 0x6c, 0x00,
			0x63, 0x00, 0xcc, 0x00, 0x18, 0x00, 0x32, 0x00, 0x18, 0x00, 0x18, 0xc0, 0x43, 0x00, 0x0c, 0x00,
			0xc3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xce, 0x00,
			0x76, 0x00, 0x64, 0x00, 0x6e, 0x00, 0x64, 0x00, 0x60, 0x00, 0x7c, 0x00, 0x63, 0x00, 0x60, 0x00,
			0x60, 0x00, 0x66, 0x00, 0x60, 0x00, 0x63, 0x18, 0x63, 0x00, 0x6c, 0x00, 0x66, 0x00, 0x66, 0x00,
			0x60, 0x00, 0x86, 0x00, 0x2e, 0x00, 0x37, 0x00, 0x08, 0x00, 0x08, 0x80, 0x43, 0x00, 0x08, 0x00,
			0xc0, 0x80, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x01, 0x10, 0x00, 0x44, 0x00, 0x10, 0x00,
			0x00, 0x00, 0x04, 0x80, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x03, 0xc0, 0x7f, 0x80, 0x0f, 0x00,
			0x07, 0x80, 0x7c, 0x00, 0x0f, 0x00, 0x20, 0x00, 0x3c, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7, 0x80, 0xfc, 0x00, 0x3c, 0x00,
			0xfc, 0x00, 0xfe, 0x00, 0xf0, 0x00, 0x38, 0x00, 0xf7, 0x80, 0xf0, 0x00, 0x38, 0x00, 0xf1, 0x80,
			0xfe, 0x00, 0xe0, 0x78, 0xe3, 0x00, 0x38, 0x00, 0x78, 0x00, 0x3a, 0x00, 0xf3, 0x80, 0xb8, 0x00,
			0x3c, 0x00, 0x1c, 0x00, 0x18, 0x00, 0x18, 0xc0, 0xe7, 0x80, 0x1e, 0x00, 0xff, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b, 0x00, 0xdc, 0x00, 0x38, 0x00,
			0x3b, 0x00, 0x38, 0x00, 0xf0, 0x00, 0x3e, 0x00, 0xf7, 0x80, 0xf0, 0x00, 0x60, 0x00, 0xf3, 0x00,
			0xf0, 0x00, 0xf7, 0xbc, 0xf7, 0x80, 0x38, 0x00, 0x7c, 0x00, 0x3e, 0x00, 0xf0, 0x00, 0x7c, 0x00,
			0x1c, 0x00, 0x1b, 0x80, 0x08, 0x00, 0x08, 0x80, 0xe7, 0x80, 0x08, 0x00, 0xff, 0x80, 0x00, 0x00,
			0xe0, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x38, 0x0e, 0x0e, 0x03, 0x83, 0x80, 0xe0, 0x00, 0x00, 0x00, 0xfb, 0x7c,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x07, 0xf0, 0x01, 0xfc, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00,
			0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0xf0, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x05, 0x03, 0x06, 0x06, 0x06, 0x05, 0x02,
			0x03, 0x04, 0x05, 0x05, 0x04, 0x05, 0x04, 0x04, 0x08, 0x06, 0x0a, 0x09, 0x0b, 0x09, 0x09, 0x0a,
			0x09, 0x09, 0x02, 0x02, 0x05, 0x05, 0x05, 0x05, 0x07, 0x0d, 0x0b, 0x0a, 0x0b, 0x0b, 0x0b, 0x0c,
			0x0c, 0x06, 0x0a, 0x0c, 0x09, 0x0e, 0x0d, 0x0b, 0x0b, 0x0b, 0x0c, 0x09, 0x0a, 0x0c, 0x0d, 0x10,
			0x0c, 0x0c, 0x09, 0x03, 0x07, 0x03, 0x06, 0x09, 0x07, 0x09, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08,
			0x09, 0x05, 0x05, 0x09, 0x05, 0x0d, 0x09, 0x07, 0x08, 0x08, 0x08, 0x07, 0x06, 0x09, 0x0a, 0x0e,
			0x09, 0x0a, 0x08, 0x07, 0x03, 0x05, 0x0e, 0x0b, 0x20, 0x7f, 0x02, 0x00, 0x0e, 0x01, 0x01, 0x00,
			0x00, 0x00, 0x70, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x20, 0x00, 0x40, 0x00,
			0x20, 0x00, 0x40, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,
			0x3c, 0x00, 0x08, 0x00, 0x3e, 0x00, 0x3c, 0x00, 0x18, 0x80, 0xff, 0x80, 0x1c, 0x00, 0x3f, 0x80,
			0x1e, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00,
			0x00, 0x00, 0x01, 0x00, 0xff, 0x80, 0x0e, 0x40, 0xff, 0x00, 0xff, 0xe0, 0xff, 0xe0, 0x0e, 0x40,
			0xff, 0xf0, 0xfc, 0x00, 0x0f, 0xc0, 0xfd, 0xf0, 0xfc, 0x00, 0xfc, 0x7c, 0xfe, 0xf8, 0x1f, 0x00,
			0xff, 0x80, 0x1f, 0x00, 0xff, 0x80, 0x3c, 0x80, 0xff, 0xc0, 0xfd, 0xf0, 0xfe, 0xf8, 0xff, 0xff,
			0xff, 0xf0, 0xff, 0xf0, 0x7f, 0x80, 0xe0, 0x00, 0x10, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
			0x10, 0x00, 0x70, 0x00, 0x70, 0x00, 0x20, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x80, 0x00, 0x00, 0x00, 0x06, 0x00, 0x14, 0x00,
			0x00, 0x00, 0xf8, 0x00, 0xa0, 0x00, 0x50, 0x00, 0x70, 0x00, 0xa8, 0x00, 0x50, 0x00, 0xc0, 0x00,
			0x40, 0x00, 0x20, 0x00, 0xa8, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,
			0x66, 0x00, 0x38, 0x00, 0x7f, 0x80, 0xcf, 0x00, 0x1b, 0x80, 0x7f, 0x00, 0x73, 0x00, 0x7f, 0xc0,
			0x33, 0x00, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x88, 0x00,
			0x00, 0x00, 0x07, 0x00, 0x7b, 0xc0, 0x3d, 0xc0, 0x7b, 0xc0, 0x78, 0x60, 0x78, 0x60, 0x39, 0xc0,
			0x79, 0xe0, 0x78, 0x00, 0x07, 0x80, 0x78, 0xe0, 0x78, 0x00, 0x7c, 0x78, 0x7c, 0x70, 0x7b, 0xc0,
			0x7b, 0xc0, 0x7b, 0xc0, 0x79, 0xe0, 0x73, 0x80, 0xde, 0xc0, 0x78, 0xe0, 0x7c, 0x70, 0x7b, 0xce,
			0x7c, 0xe0, 0x78, 0xe0, 0x67, 0x80, 0x80, 0x00, 0x28, 0x00, 0x20, 0x00, 0x04, 0x00, 0x38, 0x00,
			0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00,
			0xf0, 0x00, 0xf8, 0x00, 0xf8, 0x01, 0xe0, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x92, 0x00, 0xc0, 0x00, 0x20, 0x00, 0xfb, 0x7c, 0x1e, 0x00,
			0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0xf8, 0x00, 0xd8, 0x00, 0x50, 0x00, 0x20, 0x00, 0xc0, 0x00,
			0x80, 0x00, 0x10, 0x00, 0x70, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00,
			0xe7, 0x00, 0xf8, 0x00, 0x47, 0xc0, 0xe7, 0x80, 0x17, 0x80, 0x7f, 0x00, 0x77, 0x80, 0x7f, 0x80,
			0x71, 0x80, 0xf7, 0x80, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0xf8, 0x00, 0x30, 0x00, 0x10, 0x00,
			0x00, 0x00, 0x1f, 0x00, 0x79, 0xe0, 0x78, 0xc0, 0x79, 0xe0, 0x78, 0x20, 0x78, 0x20, 0x70, 0xc0,
			0x79, 0xe0, 0x78, 0x00, 0x07, 0x80, 0x78, 0xc0, 0x78, 0x00, 0x3e, 0xf8, 0x3e, 0x20, 0xf1, 0xe0,
			0x79, 0xe0, 0xf1, 0xe0, 0x79, 0xe0, 0xf9, 0x80, 0x9e, 0x40, 0x78, 0x40, 0x3c, 0x30, 0x39, 0xc6,
			0x3e, 0x40, 0x3c, 0x40, 0x4f, 0x80, 0x80, 0x00, 0x4c, 0x00, 0x20, 0x00, 0x0c, 0x00, 0x7c, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x03, 0x00,
			0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x60, 0x00, 0xf8, 0x00, 0x7f, 0xf8, 0xfc, 0x00,
			0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x50, 0x00, 0x88, 0x00, 0x30, 0x00, 0x50, 0x00, 0x00, 0x00,
			0x80, 0x00, 0x10, 0x00, 0xa8, 0x00, 0xf8, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x20, 0x00,
			0xe7, 0x00, 0x78, 0x00, 0x77, 0xc0, 0x67, 0x80, 0x17, 0x80, 0x40, 0x00, 0xf3, 0x00, 0x81, 0x80,
			0xfb, 0x00, 0xf7, 0x80, 0xc0, 0x00, 0xc0, 0x00, 0x80, 0x00, 0x00, 0x00, 0x08, 0x00, 0x20, 0x00,
			0x00, 0x00, 0x0f, 0x80, 0x7b, 0xc0, 0xf0, 0x40, 0x79, 0xe0, 0x78, 0xa0, 0x78, 0xa0, 0xf0, 0x40,
			0x79, 0xe0, 0x78, 0x00, 0x07, 0x80, 0x79, 0x80, 0x78, 0x00, 0x3f, 0x78, 0x3f, 0x20, 0xf1, 0xe0,
			0x79, 0xe0, 0xf1, 0xe0, 0x79, 0xe0, 0xfc, 0x80, 0x1e, 0x00, 0x78, 0x40, 0x3e, 0x20, 0x3d, 0xe4,
			0x1e, 0x40, 0x1e, 0x80, 0x0f, 0x00, 0x80, 0x00, 0x9e, 0x00, 0x20, 0x00, 0xd8, 0x00, 0x7c, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x38, 0x00, 0x05, 0x00,
			0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00,
			0x10, 0x00, 0x02, 0x00, 0x16, 0x00, 0x00, 0x00, 0x70, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x7c, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x0f, 0xe0, 0x76, 0x00,
			0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0xf8, 0x00, 0xd8, 0x00, 0x68, 0x00, 0x98, 0x00, 0x00, 0x00,
			0x40, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
			0xe7, 0x00, 0x78, 0x00, 0x27, 0x80, 0x1f, 0x00, 0x27, 0x80, 0x7c, 0x00, 0xf0, 0x00, 0x03, 0x00,
			0xfe, 0x00, 0xf7, 0x80, 0xc0, 0x00, 0xc0, 0x00, 0x60, 0x00, 0xf8, 0x00, 0x30, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x17, 0x80, 0x7f, 0x80, 0xf0, 0x40, 0x79, 0xe0, 0x79, 0x80, 0x79, 0x80, 0xf0, 0x40,
			0x79, 0xe0, 0x78, 0x00, 0x07, 0x80, 0x7a, 0x00, 0x78, 0x00, 0x3f, 0x78, 0x2f, 0x20, 0xf1, 0xe0,
			0x7b, 0xc0, 0xf1, 0xe0, 0x79, 0xe0, 0x7e, 0x00, 0x1e, 0x00, 0x78, 0x40, 0x1e, 0x20, 0x1c, 0xe4,
			0x1f, 0x80, 0x0f, 0x00, 0x1f, 0x00, 0x80, 0x00, 0x7c, 0x00, 0x20, 0x00, 0xf0, 0x00, 0x38, 0x00,
			0x00, 0x00, 0x3e, 0x00, 0x7e, 0x00, 0x3e, 0x00, 0x7e, 0x00, 0x3e, 0x00, 0x7c, 0x00, 0x3e, 0x00,
			0x7e, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0xef, 0x00, 0x70, 0x00, 0xf6, 0x60, 0xf6, 0x00, 0x7c, 0x00,
			0xfe, 0x00, 0x7e, 0x00, 0xff, 0x00, 0x7e, 0x00, 0xf8, 0x00, 0xff, 0x00, 0xff, 0xc0, 0xff, 0xfc,
			0xff, 0x80, 0xff, 0xc0, 0x7f, 0x00, 0x74, 0x00, 0x60, 0x00, 0x50, 0x00, 0x03, 0x80, 0x33, 0x00,
			0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x50, 0x00, 0x70, 0x00, 0x90, 0x00, 0x68, 0x00, 0x00, 0x00,
			0x20, 0x00, 0x40, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
			0xe7, 0x00, 0x78, 0x00, 0x0e, 0x00, 0x0c, 0x00, 0x27, 0x80, 0x7f, 0x00, 0xff, 0x00, 0x07, 0x00,
			0x7f, 0x00, 0x77, 0x80, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x20, 0x00,
			0x00, 0x00, 0x17, 0xc0, 0x7b, 0xc0, 0xf0, 0x00, 0x79, 0xe0, 0x7f, 0x80, 0x7f, 0x80, 0xf0, 0x00,
			0x7f, 0xe0, 0x78, 0x00, 0x67, 0x80, 0x7f, 0xc0, 0x78, 0x00, 0x2f, 0xf8, 0x2f, 0xa0, 0xf1, 0xe0,
			0x7f, 0x80, 0xf1, 0xe0, 0x7f, 0x80, 0x3f, 0x00, 0x1e, 0x00, 0x78, 0x40, 0x1f, 0x40, 0x1e, 0xf8,
			0x0f, 0x00, 0x0f, 0x00, 0x1e, 0x00, 0xe0, 0x00, 0x38, 0x00, 0xe0, 0x00, 0x60, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x67, 0x00, 0x77, 0x00, 0x73, 0x00, 0xee, 0x00, 0x67, 0x00, 0x38, 0x00, 0x77, 0x00,
			0x77, 0x00, 0x70, 0x00, 0x70, 0x00, 0xe6, 0x00, 0x70, 0x00, 0x7f, 0xf0, 0x7f, 0x00, 0xee, 0x00,
			0x77, 0x00, 0xee, 0x00, 0x76, 0x00, 0xe2, 0x00, 0x70, 0x00, 0x77, 0x00, 0x79, 0x80, 0x7b, 0xcc,
			0x7b, 0x00, 0x79, 0x80, 0xde, 0x00, 0x74, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x05, 0x40, 0x11, 0x80,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0xe7, 0x00, 0x78, 0x00, 0x30, 0x80, 0x67, 0x00, 0x47, 0x80, 0x7f, 0x80, 0xf7, 0x80, 0x0e, 0x00,
			0x3f, 0x80, 0x1f, 0x80, 0xc0, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x13, 0xc0, 0x79, 0xe0, 0xf0, 0x00, 0x79, 0xe0, 0x79, 0x80, 0x79, 0x80, 0xf3, 0xf0,
			0x79, 0xe0, 0x78, 0x00, 0xf7, 0x80, 0x7b, 0xc0, 0x78, 0x00, 0x2f, 0x78, 0x27, 0xe0, 0xf1, 0xe0,
			0x78, 0x00, 0xf1, 0xe0, 0x7b, 0xc0, 0x1f, 0x80, 0x1e, 0x00, 0x78, 0x40, 0x0f, 0x40, 0x0f, 0xf8,
			0x1f, 0x80, 0x0f, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x07, 0x00, 0x77, 0x00, 0xe3, 0x00, 0xee, 0x00, 0xfe, 0x00, 0x38, 0x00, 0x77, 0x00,
			0x77, 0x00, 0x70, 0x00, 0x70, 0x00, 0xec, 0x00, 0x70, 0x00, 0x77, 0x70, 0x77, 0x00, 0xee, 0x00,
			0x77, 0x00, 0xee, 0x00, 0x70, 0x00, 0xf8, 0x00, 0x70, 0x00, 0x77, 0x00, 0x39, 0x00, 0x39, 0xc8,
			0x3a, 0x00, 0x39, 0x80, 0xbc, 0x00, 0xfa, 0x00, 0x60, 0x00, 0x00, 0x00, 0x02, 0x80, 0x00, 0xc0,
			0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
			0xe7, 0x00, 0x78, 0x00, 0x76, 0x40, 0xf7, 0x80, 0xff, 0xe0, 0x0f, 0x80, 0xf7, 0x80, 0x0e, 0x00,
			0x4f, 0x80, 0x67, 0x80, 0xc0, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x3f, 0xe0, 0x79, 0xe0, 0xf0, 0x00, 0x79, 0xe0, 0x78, 0xa0, 0x78, 0x80, 0xf1, 0xe0,
			0x79, 0xe0, 0x78, 0x00, 0xf7, 0x80, 0x79, 0xe0, 0x78, 0x80, 0x26, 0x78, 0x23, 0xe0, 0xf1, 0xe0,
			0x78, 0x00, 0xf1, 0xe0, 0x7b, 0xc0, 0x87, 0x80, 0x1e, 0x00, 0x78, 0x40, 0x0f, 0x80, 0x0f, 0x78,
			0x17, 0x80, 0x0f, 0x00, 0x3c, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x7f, 0x00, 0x77, 0x00, 0xe0, 0x00, 0xee, 0x00, 0xe0, 0x00, 0x38, 0x00, 0x3e, 0x00,
			0x77, 0x00, 0x70, 0x00, 0x70, 0x00, 0xfe, 0x00, 0x70, 0x00, 0x77, 0x70, 0x77, 0x00, 0xee, 0x00,
			0x77, 0x00, 0xee, 0x00, 0x70, 0x00, 0x7c, 0x00, 0x70, 0x00, 0x77, 0x00, 0x3e, 0x00, 0x3d, 0xe8,
			0x1e, 0x00, 0x3d, 0x00, 0x3d, 0x00, 0x10, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
			0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00,
			0xe7, 0x00, 0x78, 0x00, 0xff, 0xc0, 0xc7, 0x80, 0x07, 0x80, 0x67, 0x80, 0x77, 0x80, 0x1e, 0x00,
			0xc3, 0x80, 0xf7, 0x80, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x21, 0xe0, 0x79, 0xe0, 0x78, 0x40, 0x79, 0xe0, 0x78, 0x20, 0x78, 0x00, 0xf1, 0xe0,
			0x79, 0xe0, 0x78, 0x00, 0xf7, 0x80, 0x79, 0xe0, 0x78, 0x80, 0x24, 0x78, 0x21, 0xf0, 0xf1, 0xe0,
			0x78, 0x00, 0xf1, 0xe0, 0x79, 0xe0, 0xc3, 0x80, 0x1e, 0x00, 0x78, 0x40, 0x07, 0x80, 0x07, 0x38,
			0x27, 0xc0, 0x0f, 0x00, 0x7c, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0xe7, 0x00, 0x77, 0x00, 0xf1, 0x00, 0xee, 0x00, 0xf1, 0x00, 0x38, 0x00, 0x18, 0x00,
			0x77, 0x00, 0x70, 0x00, 0x70, 0x00, 0xee, 0x00, 0x70, 0x00, 0x77, 0x70, 0x77, 0x00, 0xee, 0x00,
			0x77, 0x00, 0xee, 0x00, 0x70, 0x00, 0x1e, 0x00, 0x70, 0x00, 0x77, 0x00, 0x1e, 0x00, 0x1d, 0xf0,
			0x3e, 0x00, 0x1f, 0x00, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00,
			0x66, 0x00, 0x78, 0x00, 0xff, 0xc0, 0xef, 0x00, 0x07, 0x80, 0xc7, 0x00, 0x77, 0x00, 0x1f, 0x00,
			0xe3, 0x00, 0xe7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x60, 0xf0, 0x7b, 0xc0, 0x3c, 0x80, 0x7b, 0xc0, 0x78, 0x60, 0x78, 0x00, 0x79, 0xe0,
			0x79, 0xe0, 0x78, 0x00, 0xc7, 0x80, 0x79, 0xe0, 0x79, 0x80, 0x70, 0x78, 0x71, 0xf8, 0x7b, 0xc0,
			0x78, 0x00, 0x7b, 0xc0, 0x79, 0xe0, 0xe3, 0x00, 0x1e, 0x00, 0x3c, 0x80, 0x07, 0xc0, 0x07, 0xbc,
			0x73, 0xe0, 0x0f, 0x00, 0x79, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0xe7, 0x00, 0x77, 0x00, 0x7f, 0x00, 0xee, 0x00, 0x7e, 0x00, 0x38, 0x00, 0x7c, 0x00,
			0x77, 0x00, 0x70, 0x00, 0x70, 0x00, 0xe7, 0x00, 0x70, 0x00, 0x77, 0x70, 0x77, 0x00, 0xee, 0x00,
			0x77, 0x00, 0xee, 0x00, 0x70, 0x00, 0x8e, 0x00, 0x74, 0x00, 0x7f, 0x00, 0x1f, 0x00, 0x1e, 0xf8,
			0x6f, 0x00, 0x0f, 0x00, 0xf3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
			0x3c, 0x00, 0xfc, 0x00, 0x87, 0x80, 0x7e, 0x00, 0x1f, 0xc0, 0x7e, 0x00, 0x1e, 0x00, 0x3f, 0x80,
			0x7e, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0xf9, 0xf8, 0xff, 0x80, 0x0f, 0x00, 0xff, 0x00, 0xff, 0xe0, 0xfc, 0x00, 0x1f, 0x20,
			0xff, 0xf0, 0xfc, 0x00, 0x7e, 0x00, 0xff, 0xf0, 0xff, 0x80, 0xf8, 0xfc, 0xf8, 0xf0, 0x1f, 0x00,
			0xfc, 0x00, 0x1f, 0x00, 0xfc, 0xf0, 0xbe, 0x00, 0x3f, 0x00, 0x1f, 0x00, 0x03, 0x80, 0x03, 0x18,
			0xff, 0xf0, 0x1f, 0x80, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x7b, 0x80, 0xfe, 0x00, 0x3e, 0x00, 0x7f, 0x00, 0x3c, 0x00, 0x7c, 0x00, 0x7f, 0x00,
			0xff, 0x80, 0xf8, 0x00, 0x70, 0x01, 0xef, 0x80, 0xf8, 0x00, 0xff, 0xf8, 0xff, 0x80, 0x7c, 0x00,
			0x7e, 0x00, 0x7e, 0x00, 0xf8, 0x00, 0xfc, 0x00, 0x38, 0x00, 0x33, 0x80, 0x0c, 0x00, 0x0c, 0x60,
			0xff, 0x80, 0x0e, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00,
			0x00, 0x00, 0x0b, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02, 0x10,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00,
			0x00, 0x00, 0x00, 0x03, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x70, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x40,
			0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x1d, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x00,
			0x00, 0x00, 0x00, 0x03, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x70, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x08, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00,
			0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0xf8, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x05, 0x02, 0x03, 0x06, 0x06, 0x06, 0x05, 0x01, 0x03, 0x04, 0x05, 0x05, 0x02, 0x05, 0x01, 0x04,
			0x05, 0x04, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x02, 0x02, 0x05, 0x05, 0x05, 0x05,
			0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x02, 0x02, 0x05, 0x05, 0x07, 0x05, 0x05,
			0x05, 0x05, 0x05, 0x05, 0x06, 0x05, 0x05, 0x07, 0x05, 0x05, 0x05, 0x03, 0x07, 0x03, 0x06, 0x03,
			0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x04, 0x05, 0x05, 0x02, 0x02, 0x05, 0x02, 0x07, 0x04, 0x05,
			0x05, 0x05, 0x05, 0x05, 0x03, 0x05, 0x04, 0x07, 0x05, 0x05, 0x05, 0x07, 0x05, 0x07, 0x07, 0x04,
			0x20, 0x7f, 0x02, 0x00, 0x08, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x40, 0x00, 0x20, 0x00, 0x80, 0x00, 0x20, 0x00, 0x40, 0x00, 0x20, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x70, 0x00, 0x30, 0x00, 0x70, 0x00, 0x70, 0x00,
			0x30, 0x00, 0xf0, 0x00, 0x70, 0x00, 0x78, 0x00, 0x70, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x70, 0x00, 0xf0, 0x00, 0x70, 0x00,
			0xf0, 0x00, 0xf8, 0x00, 0xf8, 0x00, 0x70, 0x00, 0xd8, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0xd8, 0x00,
			0xc0, 0x00, 0xec, 0x00, 0xf0, 0x00, 0x70, 0x00, 0xf0, 0x00, 0x70, 0x00, 0xf0, 0x00, 0x70, 0x00,
			0xfc, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xd6, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xf8, 0x00, 0xe0, 0x00,
			0x10, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
			0x08, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00,
			0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00,
			0x00, 0x00, 0x38, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0xa0, 0x00, 0x50, 0x00,
			0x70, 0x00, 0xa8, 0x00, 0x50, 0x00, 0x80, 0x00, 0x40, 0x00, 0x20, 0x00, 0xa8, 0x00, 0x20, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0xd8, 0x00, 0x70, 0x00, 0x98, 0x00, 0xd8, 0x00,
			0x70, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0x08, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x18, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x88, 0x00, 0x00, 0x00, 0xf8, 0x00, 0xd8, 0x00, 0xc8, 0x00,
			0xd8, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0xc8, 0x00, 0xd8, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0xd8, 0x00,
			0xc0, 0x00, 0xfe, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xc8, 0x00,
			0x30, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xd6, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0x18, 0x00, 0x80, 0x00,
			0x28, 0x00, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00,
			0x18, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00,
			0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe6, 0x00,
			0xf8, 0x00, 0x18, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xf8, 0x00,
			0xd8, 0x00, 0x50, 0x00, 0x20, 0x00, 0x80, 0x00, 0xc0, 0x00, 0x30, 0x00, 0x70, 0x00, 0x20, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0xd8, 0x00, 0x30, 0x00, 0x18, 0x00, 0x18, 0x00,
			0xb0, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0x18, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xc0, 0x00, 0xc0, 0x00,
			0x60, 0x00, 0xf8, 0x00, 0x30, 0x00, 0x10, 0x00, 0x00, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xc0, 0x00,
			0xd8, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0xd8, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0xd8, 0x00,
			0xc0, 0x00, 0xd6, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xc0, 0x00,
			0x30, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xd6, 0x00, 0x60, 0x00, 0xd8, 0x00, 0x30, 0x00, 0x80, 0x00,
			0x4c, 0x00, 0x20, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xf0, 0x00, 0x78, 0x00,
			0x78, 0x00, 0x70, 0x00, 0xc0, 0x00, 0x70, 0x00, 0xf0, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0xd0, 0x00,
			0xc0, 0x00, 0x74, 0x00, 0xe0, 0x00, 0x70, 0x00, 0xf0, 0x00, 0x78, 0x00, 0xf0, 0x00, 0x78, 0x00,
			0xe0, 0x00, 0xd8, 0x01, 0xb0, 0x00, 0x56, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xf8, 0x00, 0x6e, 0x00,
			0xf8, 0x00, 0x2a, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x50, 0x00,
			0x88, 0x00, 0x30, 0x00, 0x50, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x30, 0x00, 0xa8, 0x00, 0xf8, 0x00,
			0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x20, 0x00, 0xd8, 0x00, 0x30, 0x00, 0x18, 0x00, 0x30, 0x00,
			0xb0, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0x30, 0x00, 0x70, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x80, 0x00, 0x00, 0x00, 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0xd8, 0x00, 0xf0, 0x00, 0xc0, 0x00,
			0xd8, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xc0, 0x00, 0xf8, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0xf0, 0x00,
			0xc0, 0x00, 0xd6, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0x70, 0x00,
			0x30, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xd6, 0x00, 0x30, 0x00, 0x78, 0x00, 0x60, 0x00, 0x80, 0x00,
			0x9e, 0x00, 0x20, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0xd8, 0x00, 0xc0, 0x00,
			0xd8, 0x00, 0xd8, 0x00, 0xc0, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0xe0, 0x00,
			0xc0, 0x00, 0x6a, 0x00, 0xd0, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xc8, 0x00, 0xc0, 0x00,
			0xc0, 0x00, 0xd8, 0x01, 0xb0, 0x00, 0x56, 0x00, 0xf8, 0x00, 0xd8, 0x00, 0x30, 0x00, 0x2c, 0x00,
			0xf8, 0x00, 0x44, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00,
			0xd8, 0x00, 0x68, 0x00, 0x98, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x30, 0x00, 0x20, 0x00, 0x20, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0xd8, 0x00, 0x30, 0x00, 0x30, 0x00, 0x18, 0x00,
			0xf8, 0x00, 0x18, 0x00, 0xd8, 0x00, 0x30, 0x00, 0xd8, 0x00, 0x18, 0x00, 0xc0, 0x00, 0x00, 0x00,
			0x60, 0x00, 0xf8, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0xd8, 0x00, 0xc0, 0x00,
			0xd8, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0xf8, 0x00,
			0xc0, 0x00, 0xd6, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xf0, 0x00, 0xd8, 0x00, 0xf0, 0x00, 0x18, 0x00,
			0x30, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xd6, 0x00, 0xd8, 0x00, 0x18, 0x00, 0xc0, 0x00, 0x80, 0x00,
			0x7c, 0x00, 0x20, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0xd8, 0x00, 0xc0, 0x00,
			0xd8, 0x00, 0xf8, 0x00, 0xf0, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0xe0, 0x00,
			0xc0, 0x00, 0x6a, 0x00, 0xd0, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xc0, 0x00, 0xf8, 0x00,
			0xc0, 0x00, 0xd8, 0x01, 0xb0, 0x00, 0x56, 0x00, 0x70, 0x00, 0xd8, 0x00, 0x60, 0x00, 0x28, 0x00,
			0xf8, 0x00, 0xa8, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x50, 0x00,
			0x70, 0x00, 0x90, 0x00, 0x68, 0x00, 0x00, 0x00, 0x40, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0xd8, 0x00, 0x30, 0x00, 0x60, 0x00, 0xd8, 0x00,
			0x30, 0x00, 0x18, 0x00, 0xd8, 0x00, 0x30, 0x00, 0xd8, 0x00, 0x18, 0x00, 0x00, 0x00, 0x40, 0x00,
			0x18, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x20, 0x00, 0x00, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xc8, 0x00,
			0xd8, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0xd8, 0x00,
			0xc0, 0x00, 0xd6, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xc0, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0x98, 0x00,
			0x30, 0x00, 0xd8, 0x00, 0x70, 0x00, 0xfe, 0x00, 0xd8, 0x00, 0x18, 0x00, 0xf8, 0x00, 0xe0, 0x00,
			0x38, 0x00, 0xe0, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x00, 0xd8, 0x00, 0xc0, 0x00,
			0xd8, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0x78, 0x00, 0xd8, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0xf0, 0x00,
			0xc0, 0x00, 0x6a, 0x00, 0xd0, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xd8, 0x00, 0xc0, 0x00, 0x18, 0x00,
			0xc0, 0x00, 0xd8, 0x01, 0xb0, 0x00, 0x56, 0x00, 0xf8, 0x00, 0x78, 0x00, 0xc0, 0x00, 0x28, 0x00,
			0x70, 0x00, 0x30, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x40, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x70, 0x00, 0x30, 0x00, 0xf8, 0x00, 0x70, 0x00,
			0x30, 0x00, 0xf0, 0x00, 0x70, 0x00, 0x30, 0x00, 0x70, 0x00, 0x70, 0x00, 0x00, 0x00, 0x40, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x00, 0xf0, 0x00, 0x70, 0x00,
			0xf0, 0x00, 0xf8, 0x00, 0xc0, 0x00, 0x70, 0x00, 0xd8, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0xd8, 0x00,
			0xf8, 0x00, 0xd6, 0x00, 0xd8, 0x00, 0x70, 0x00, 0xc0, 0x00, 0x70, 0x00, 0xd8, 0x00, 0x70, 0x00,
			0x30, 0x00, 0x70, 0x00, 0x20, 0x00, 0x6c, 0x00, 0xd8, 0x00, 0x70, 0x00, 0xf8, 0x00, 0x00, 0x00,
			0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0xf0, 0x00, 0x78, 0x00,
			0x78, 0x00, 0x78, 0x00, 0xc0, 0x00, 0x18, 0x00, 0xd8, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0xd8, 0x00,
			0xc0, 0x00, 0x6a, 0x00, 0xd0, 0x00, 0x70, 0x00, 0xf0, 0x00, 0x78, 0x00, 0xc0, 0x00, 0xf0, 0x00,
			0x70, 0x00, 0x78, 0x00, 0xe0, 0x00, 0x2e, 0x00, 0xd8, 0x00, 0x18, 0x00, 0xf8, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x02, 0x03, 0x06, 0x06, 0x06, 0x05, 0x01,
			0x03, 0x04, 0x05, 0x05, 0x02, 0x05, 0x02, 0x04, 0x06, 0x05, 0x05, 0x05, 0x06, 0x05, 0x05, 0x05,
			0x05, 0x05, 0x02, 0x02, 0x05, 0x05, 0x05, 0x05, 0x03, 0x08, 0x07, 0x07, 0x07, 0x07, 0x07, 0x08,
			0x07, 0x02, 0x06, 0x08, 0x07, 0x08, 0x07, 0x08, 0x07, 0x09, 0x07, 0x08, 0x07, 0x07, 0x08, 0x0c,
			0x08, 0x08, 0x08, 0x03, 0x07, 0x03, 0x06, 0x09, 0x03, 0x06, 0x06, 0x06, 0x06, 0x05, 0x05, 0x06,
			0x06, 0x02, 0x05, 0x05, 0x03, 0x08, 0x06, 0x07, 0x06, 0x08, 0x05, 0x06, 0x05, 0x06, 0x06, 0x08,
			0x06, 0x06, 0x06, 0x07, 0x05, 0x07, 0x07, 0x04, 0x20, 0x7f, 0x02, 0x00, 0x09, 0x01, 0x01, 0x00,
			0x00, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x20, 0x00, 0x80, 0x00,
			0x20, 0x00, 0x40, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,
			0x30, 0x00, 0x70, 0x00, 0x70, 0x00, 0xf8, 0x00, 0x1c, 0x00, 0xf8, 0x00, 0x78, 0x00, 0xf8, 0x00,
			0x70, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00,
			0x00, 0x00, 0x18, 0x00, 0xf8, 0x00, 0x06, 0x00, 0xc0, 0x00, 0x3e, 0x00, 0x3e, 0x00, 0x06, 0x00,
			0xc6, 0x00, 0xc0, 0x00, 0x0c, 0x00, 0xc3, 0x00, 0xc0, 0x00, 0xc3, 0x00, 0xc6, 0x00, 0x18, 0x00,
			0xf8, 0x00, 0x18, 0x00, 0xf8, 0x00, 0x3e, 0x00, 0xfe, 0x00, 0xc6, 0x00, 0xc3, 0x00, 0xc0, 0x30,
			0xc3, 0x00, 0xc3, 0x00, 0xff, 0x00, 0x20, 0x00, 0x10, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
			0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x38, 0x00, 0x70, 0x00, 0x00, 0x00,
			0x00, 0x00, 0xc0, 0x00, 0xa0, 0x00, 0x50, 0x00, 0x70, 0x00, 0xa8, 0x00, 0x50, 0x00, 0x80, 0x00,
			0x40, 0x00, 0x20, 0x00, 0xa8, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,
			0x78, 0x00, 0x30, 0x00, 0xf8, 0x00, 0x18, 0x00, 0x38, 0x00, 0x80, 0x00, 0x80, 0x00, 0x98, 0x00,
			0x88, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x88, 0x00,
			0x00, 0x00, 0x18, 0x00, 0xce, 0x00, 0x1c, 0x00, 0xf0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0x1c, 0x00,
			0xc6, 0x00, 0xc0, 0x00, 0x0c, 0x00, 0xce, 0x00, 0xc0, 0x00, 0xe7, 0x00, 0xe6, 0x00, 0x3c, 0x00,
			0xce, 0x00, 0x3c, 0x00, 0xce, 0x00, 0xe0, 0x00, 0x18, 0x00, 0xc6, 0x00, 0x66, 0x00, 0x60, 0x60,
			0x66, 0x00, 0x66, 0x00, 0x06, 0x00, 0x00, 0x00, 0x28, 0x00, 0x20, 0x00, 0x04, 0x00, 0x38, 0x00,
			0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00,
			0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe6, 0x00, 0xf8, 0x00, 0x18, 0x00, 0x88, 0x00, 0x00, 0x00,
			0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xf8, 0x00, 0xd8, 0x00, 0x50, 0x00, 0x20, 0x00, 0x80, 0x00,
			0x80, 0x00, 0x10, 0x00, 0x70, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00,
			0xcc, 0x00, 0x30, 0x00, 0x18, 0x00, 0x70, 0x00, 0x58, 0x00, 0xf8, 0x00, 0xf0, 0x00, 0x30, 0x00,
			0x70, 0x00, 0xd8, 0x00, 0xc0, 0x00, 0x40, 0x00, 0x60, 0x00, 0xf8, 0x00, 0x30, 0x00, 0x18, 0x00,
			0x00, 0x00, 0x3c, 0x00, 0xdc, 0x00, 0x70, 0x00, 0xdc, 0x00, 0x70, 0x00, 0xc0, 0x00, 0x70, 0x00,
			0xc6, 0x00, 0xc0, 0x00, 0x0c, 0x00, 0xf8, 0x00, 0xc0, 0x00, 0xff, 0x00, 0xf6, 0x00, 0x66, 0x00,
			0xdc, 0x00, 0x66, 0x00, 0xdc, 0x00, 0x70, 0x00, 0x18, 0x00, 0xc6, 0x00, 0x66, 0x00, 0x60, 0x60,
			0x3c, 0x00, 0x3c, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x20, 0x00, 0x0c, 0x00, 0x7c, 0x00,
			0x00, 0x00, 0xf0, 0x00, 0xc0, 0x00, 0x1c, 0x00, 0x0c, 0x00, 0x18, 0x00, 0xc0, 0x00, 0x1c, 0x00,
			0xc0, 0x00, 0xc0, 0x00, 0x18, 0x00, 0xd8, 0x00, 0x60, 0x00, 0xfe, 0x00, 0xd8, 0x00, 0x38, 0x00,
			0xe0, 0x00, 0x1c, 0x00, 0xd8, 0x00, 0x70, 0x00, 0xf8, 0x00, 0xcc, 0x00, 0xcc, 0x00, 0xdb, 0x00,
			0xcc, 0x00, 0xcc, 0x00, 0xfc, 0x00, 0x6e, 0x00, 0xf8, 0x00, 0x2a, 0x00, 0xa8, 0x00, 0x00, 0x00,
			0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x50, 0x00, 0x88, 0x00, 0x30, 0x00, 0x50, 0x00, 0x00, 0x00,
			0x80, 0x00, 0x10, 0x00, 0xa8, 0x00, 0xf8, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x20, 0x00,
			0xcc, 0x00, 0x30, 0x00, 0x30, 0x00, 0x18, 0x00, 0xd8, 0x00, 0x08, 0x00, 0x88, 0x00, 0x30, 0x00,
			0x88, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x08, 0x00, 0x30, 0x00,
			0x00, 0x00, 0x3c, 0x00, 0xf0, 0x00, 0xc0, 0x00, 0xc6, 0x00, 0x18, 0x00, 0xfc, 0x00, 0xc3, 0x00,
			0xf6, 0x00, 0xc0, 0x00, 0x0c, 0x00, 0xe0, 0x00, 0xc0, 0x00, 0xdb, 0x00, 0xde, 0x00, 0xc3, 0x00,
			0xf0, 0x00, 0xc3, 0x00, 0xf0, 0x00, 0x18, 0x00, 0x18, 0x00, 0xc6, 0x00, 0x3c, 0x00, 0x36, 0xc0,
			0x18, 0x00, 0x18, 0x00, 0x18, 0x00, 0x00, 0x00, 0x9e, 0x00, 0x20, 0x00, 0xd8, 0x00, 0x7c, 0x00,
			0x00, 0x00, 0x18, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x1c, 0x00, 0x78, 0x00, 0xf0, 0x00, 0x7c, 0x00,
			0xf0, 0x00, 0xc0, 0x00, 0x18, 0x00, 0xf0, 0x00, 0x60, 0x00, 0xff, 0x00, 0xfc, 0x00, 0x6c, 0x00,
			0xf8, 0x00, 0x7c, 0x00, 0xf0, 0x00, 0xe0, 0x00, 0xc0, 0x00, 0xcc, 0x00, 0xcc, 0x00, 0xdb, 0x00,
			0x78, 0x00, 0xcc, 0x00, 0x18, 0x00, 0x2c, 0x00, 0xf8, 0x00, 0x44, 0x00, 0xa8, 0x00, 0x00, 0x00,
			0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xf8, 0x00, 0xd8, 0x00, 0x68, 0x00, 0x98, 0x00, 0x00, 0x00,
			0x40, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
			0xcc, 0x00, 0x30, 0x00, 0x60, 0x00, 0x18, 0x00, 0xf8, 0x00, 0x98, 0x00, 0xd8, 0x00, 0x60, 0x00,
			0xd8, 0x00, 0x78, 0x00, 0xc0, 0x00, 0x40, 0x00, 0x60, 0x00, 0xf8, 0x00, 0x30, 0x00, 0x30, 0x00,
			0x00, 0x00, 0x66, 0x00, 0xdc, 0x00, 0x70, 0x00, 0xdc, 0x00, 0x70, 0x00, 0xc0, 0x00, 0x73, 0x00,
			0xde, 0x00, 0xc0, 0x00, 0x0c, 0x00, 0xf8, 0x00, 0xc0, 0x00, 0xc3, 0x00, 0xce, 0x00, 0x66, 0x00,
			0xc0, 0x00, 0x66, 0x00, 0xd8, 0x00, 0x0e, 0x00, 0x18, 0x00, 0xc6, 0x00, 0x3c, 0x00, 0x3f, 0xc0,
			0x3c, 0x00, 0x18, 0x00, 0x30, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x20, 0x00, 0xf0, 0x00, 0x38, 0x00,
			0x00, 0x00, 0x3c, 0x00, 0xf0, 0x00, 0xc0, 0x00, 0x7c, 0x00, 0xf8, 0x00, 0xc0, 0x00, 0xcc, 0x00,
			0xd8, 0x00, 0xc0, 0x00, 0x18, 0x00, 0xc0, 0x00, 0x60, 0x00, 0xdb, 0x00, 0xec, 0x00, 0xc6, 0x00,
			0xcc, 0x00, 0xcc, 0x00, 0xe0, 0x00, 0x78, 0x00, 0xc0, 0x00, 0xdc, 0x00, 0xd8, 0x00, 0xfe, 0x00,
			0x30, 0x00, 0xdc, 0x00, 0x30, 0x00, 0x28, 0x00, 0xf8, 0x00, 0xa8, 0x00, 0x70, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x70, 0x00, 0x90, 0x00, 0x68, 0x00, 0x00, 0x00,
			0x20, 0x00, 0x40, 0x00, 0x00, 0x00, 0x20, 0x00, 0x40, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x40, 0x00,
			0x78, 0x00, 0x78, 0x00, 0xc0, 0x00, 0xf0, 0x00, 0x18, 0x00, 0xf0, 0x00, 0x70, 0x00, 0x60, 0x00,
			0x70, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x18, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x66, 0x00, 0xce, 0x00, 0x1c, 0x00, 0xf0, 0x00, 0xe0, 0x00, 0xc0, 0x00, 0x1f, 0x00,
			0xc6, 0x00, 0xc0, 0x00, 0xec, 0x00, 0xce, 0x00, 0xc0, 0x00, 0xc3, 0x00, 0xc6, 0x00, 0x3c, 0x00,
			0xc0, 0x00, 0x3e, 0x00, 0xcc, 0x00, 0x07, 0x00, 0x18, 0x00, 0xde, 0x00, 0x18, 0x00, 0x19, 0x80,
			0x66, 0x00, 0x18, 0x00, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xe0, 0x00, 0x60, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x6c, 0x00, 0xd8, 0x00, 0x70, 0x00, 0xcc, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0x7c, 0x00,
			0xd8, 0x00, 0xc0, 0x00, 0x18, 0x00, 0xf0, 0x00, 0x60, 0x00, 0xdb, 0x00, 0xcc, 0x00, 0x6c, 0x00,
			0xf8, 0x00, 0x7c, 0x00, 0xc0, 0x00, 0x0c, 0x00, 0xf8, 0x00, 0xfc, 0x00, 0xf0, 0x00, 0xfc, 0x00,
			0x78, 0x00, 0xfc, 0x00, 0x60, 0x00, 0x28, 0x00, 0x70, 0x00, 0x30, 0x00, 0x70, 0x00, 0x00, 0x00,
			0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00,
			0x30, 0x00, 0x78, 0x00, 0xf8, 0x00, 0xe0, 0x00, 0x3c, 0x00, 0x60, 0x00, 0x20, 0x00, 0x60, 0x00,
			0x20, 0x00, 0x70, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00,
			0x00, 0x00, 0xc3, 0x00, 0xf8, 0x00, 0x06, 0x00, 0xc0, 0x00, 0x3e, 0x00, 0xc0, 0x00, 0x07, 0x00,
			0xc6, 0x00, 0xc0, 0x00, 0x3c, 0x00, 0xc3, 0x00, 0xfe, 0x00, 0xc3, 0x00, 0xc6, 0x00, 0x18, 0x00,
			0xc0, 0x00, 0x1b, 0x80, 0xc6, 0x00, 0x7c, 0x00, 0x18, 0x00, 0xf6, 0x00, 0x18, 0x00, 0x19, 0x80,
			0xc3, 0x00, 0x18, 0x00, 0xff, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0xfc, 0x00, 0xfc, 0x00, 0x1c, 0x00, 0x7c, 0x00, 0xf8, 0x00, 0xc0, 0x00, 0x1c, 0x00,
			0xcc, 0x00, 0xc0, 0x00, 0x18, 0x00, 0xd8, 0x00, 0x60, 0x00, 0xdb, 0x00, 0xcc, 0x00, 0x38, 0x00,
			0xe0, 0x00, 0x1c, 0x00, 0xc0, 0x00, 0x78, 0x00, 0xe0, 0x00, 0xec, 0x00, 0xe0, 0x00, 0xd8, 0x00,
			0xcc, 0x00, 0xec, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0xc0, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00,
			0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0xc0, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x03, 0x02, 0x03, 0x06, 0x06, 0x06, 0x05, 0x01, 0x03, 0x04, 0x05, 0x05, 0x02, 0x05, 0x01, 0x04,
			0x05, 0x03, 0x06, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x02, 0x02, 0x05, 0x05, 0x05, 0x05,
			0x03, 0x08, 0x08, 0x06, 0x08, 0x05, 0x05, 0x07, 0x08, 0x05, 0x05, 0x0a, 0x08, 0x0b, 0x07, 0x07,
			0x08, 0x08, 0x09, 0x05, 0x07, 0x0a, 0x09, 0x0a, 0x09, 0x07, 0x07, 0x03, 0x07, 0x03, 0x06, 0x09,
			0x03, 0x06, 0x06, 0x04, 0x06, 0x04, 0x05, 0x06, 0x08, 0x04, 0x04, 0x06, 0x04, 0x0a, 0x07, 0x04,
			0x07, 0x06, 0x06, 0x04, 0x05, 0x06, 0x08, 0x0a, 0x07, 0x07, 0x04, 0x05, 0x04, 0x09, 0x0c, 0x20,
			0x7e, 0x02, 0x00, 0x09, 0x01, 0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x40, 0x00, 0x20, 0x00, 0x80, 0x00, 0x20, 0x00, 0x40, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x20, 0x00, 0x7c, 0x00, 0x30, 0x00, 0x7c,
			0x00, 0x70, 0x00, 0x70, 0x00, 0x38, 0x00, 0x71, 0x00, 0x78, 0x00, 0x38, 0x00, 0x71, 0x00, 0x70,
			0x00, 0x6d, 0x80, 0xd8, 0x00, 0x38, 0x00, 0x7c, 0x00, 0x38, 0x00, 0x7c, 0x00, 0x70, 0x00, 0x7e,
			0x00, 0x72, 0x00, 0x30, 0x80, 0x76, 0xc0, 0x71, 0x80, 0x72, 0x00, 0x7e, 0x00, 0xe0, 0x00, 0x10,
			0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x0c,
			0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x60, 0x00, 0x20, 0x00, 0x10, 0x00, 0x60, 0x00, 0x60,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x40, 0x00, 0xa0, 0x00, 0x50, 0x00, 0x70, 0x00, 0xa8,
			0x00, 0x50, 0x00, 0x80, 0x00, 0x40, 0x00, 0x20, 0x00, 0xa8, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x10, 0x00, 0x70, 0x00, 0x40, 0x00, 0x70, 0x00, 0x70, 0x00, 0x10, 0x00, 0xf8,
			0x00, 0x70, 0x00, 0xf8, 0x00, 0x70, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00,
			0x00, 0xc0, 0x00, 0x88, 0x00, 0x00, 0x00, 0x50, 0x00, 0x92, 0x00, 0x48, 0x00, 0x92, 0x00, 0x88,
			0x00, 0x88, 0x00, 0x44, 0x00, 0x91, 0x00, 0x90, 0x00, 0x48, 0x00, 0x92, 0x00, 0x90, 0x00, 0x92,
			0x41, 0x24, 0x00, 0x44, 0x00, 0x92, 0x00, 0x44, 0x00, 0x92, 0x00, 0x88, 0x00, 0x90, 0x00, 0x92,
			0x00, 0x48, 0x80, 0x92, 0x40, 0x91, 0x00, 0x92, 0x00, 0x84, 0x00, 0x80, 0x00, 0x28, 0x00, 0x20,
			0x00, 0x04, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
			0x00, 0x48, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x00, 0xa0, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0xb0, 0x00, 0x03,
			0x00, 0x07, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0xf8, 0x00, 0xd8, 0x00, 0x50, 0x00, 0x20,
			0x00, 0x80, 0x00, 0x80, 0x00, 0x10, 0x00, 0x70, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x20, 0x00, 0x88, 0x00, 0xc0, 0x00, 0x88, 0x00, 0x98, 0x00, 0x30, 0x00, 0x80, 0x00, 0x80,
			0x00, 0x88, 0x00, 0x88, 0x00, 0x88, 0x00, 0xc0, 0x00, 0x40, 0x00, 0x60, 0x00, 0xf8, 0x00, 0x30,
			0x00, 0x08, 0x00, 0x00, 0x00, 0x88, 0x00, 0x1e, 0x00, 0x84, 0x00, 0x11, 0x00, 0x88, 0x00, 0x88,
			0x00, 0x80, 0x00, 0x17, 0x00, 0x10, 0x00, 0x08, 0x00, 0x14, 0x00, 0x10, 0x00, 0x12, 0x20, 0x22,
			0x00, 0x82, 0x00, 0x11, 0x00, 0x82, 0x00, 0x11, 0x00, 0x88, 0x00, 0x10, 0x00, 0x22, 0x00, 0x08,
			0x80, 0x24, 0x40, 0x0a, 0x00, 0x26, 0x00, 0x08, 0x00, 0x80, 0x00, 0x4c, 0x00, 0x20, 0x00, 0x0c,
			0x00, 0x7c, 0x00, 0x00, 0x00, 0x60, 0x00, 0x38, 0x00, 0x60, 0x00, 0x70, 0x00, 0x60, 0x00, 0x40,
			0x00, 0x78, 0x00, 0x2c, 0x00, 0x60, 0x00, 0x70, 0x00, 0x28, 0x00, 0x20, 0x00, 0x69, 0x80, 0xd8,
			0x00, 0x60, 0x00, 0x68, 0x00, 0x68, 0x00, 0x68, 0x00, 0x70, 0x00, 0xf0, 0x00, 0xec, 0x00, 0x77,
			0x00, 0x71, 0xc0, 0x66, 0x00, 0x66, 0x00, 0xf0, 0x00, 0x50, 0x00, 0x50, 0x01, 0x04, 0x80, 0x0f,
			0x80, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x50, 0x00, 0x88, 0x00, 0x30, 0x00, 0x50, 0x00, 0x00,
			0x00, 0x80, 0x00, 0x10, 0x00, 0xa8, 0x00, 0xf8, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x20,
			0x00, 0x88, 0x00, 0x40, 0x00, 0x08, 0x00, 0x30, 0x00, 0x50, 0x00, 0x70, 0x00, 0xf0, 0x00, 0x10,
			0x00, 0x70, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x08, 0x00, 0x10,
			0x00, 0x00, 0x00, 0x88, 0x00, 0x12, 0x00, 0x80, 0x00, 0x11, 0x00, 0x80, 0x00, 0x80, 0x00, 0x9c,
			0x00, 0x19, 0x00, 0x10, 0x00, 0x08, 0x00, 0x1c, 0x00, 0x10, 0x00, 0x12, 0x20, 0x22, 0x00, 0x82,
			0x00, 0x12, 0x00, 0x82, 0x00, 0x12, 0x00, 0x60, 0x00, 0x10, 0x00, 0x42, 0x00, 0x08, 0x80, 0x24,
			0x40, 0x04, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x80, 0x00, 0x9e, 0x00, 0x20, 0x00, 0xd8, 0x00, 0x7c,
			0x00, 0x00, 0x00, 0x90, 0x00, 0x24, 0x00, 0x90, 0x00, 0x90, 0x00, 0x90, 0x00, 0xe0, 0x00, 0x94,
			0x00, 0x32, 0x00, 0xa0, 0x00, 0x90, 0x00, 0x34, 0x00, 0x20, 0x00, 0xb6, 0x40, 0x64, 0x00, 0x90,
			0x00, 0xb4, 0x00, 0x94, 0x00, 0xb4, 0x00, 0x80, 0x00, 0x40, 0x00, 0x24, 0x00, 0xa2, 0x00, 0xa4,
			0x80, 0xa4, 0x00, 0xa4, 0x00, 0x90, 0x00, 0x88, 0x00, 0xa0, 0x01, 0xfe, 0x80, 0x2f, 0xa0, 0x00,
			0x00, 0x40, 0x00, 0x00, 0x00, 0xf8, 0x00, 0xd8, 0x00, 0x68, 0x00, 0x98, 0x00, 0x00, 0x00, 0x40,
			0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x88,
			0x00, 0x40, 0x00, 0x30, 0x00, 0x18, 0x00, 0xf8, 0x00, 0x08, 0x00, 0x88, 0x00, 0x30, 0x00, 0x88,
			0x00, 0x78, 0x00, 0xc0, 0x00, 0x40, 0x00, 0x60, 0x00, 0xf8, 0x00, 0x30, 0x00, 0x20, 0x00, 0x00,
			0x00, 0xf8, 0x00, 0x11, 0x00, 0x84, 0x00, 0x11, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0x84, 0x00, 0x11,
			0x00, 0x10, 0x00, 0x88, 0x00, 0x12, 0x00, 0x10, 0x00, 0x12, 0x40, 0x24, 0x00, 0x82, 0x00, 0x1c,
			0x00, 0x82, 0x00, 0x1c, 0x00, 0x10, 0x00, 0x10, 0x00, 0x42, 0x00, 0x08, 0x80, 0x24, 0x40, 0x0a,
			0x00, 0x02, 0x00, 0x20, 0x00, 0x80, 0x00, 0x7c, 0x00, 0x20, 0x00, 0xf0, 0x00, 0x38, 0x00, 0x00,
			0x00, 0x90, 0x00, 0x24, 0x00, 0x80, 0x00, 0x90, 0x00, 0xf0, 0x00, 0x40, 0x00, 0x90, 0x00, 0x22,
			0x00, 0x20, 0x00, 0x10, 0x00, 0x30, 0x00, 0x20, 0x00, 0x24, 0x40, 0x44, 0x00, 0x90, 0x00, 0x24,
			0x00, 0x90, 0x00, 0x20, 0x00, 0x60, 0x00, 0x40, 0x00, 0x44, 0x00, 0x36, 0x00, 0x24, 0x80, 0x18,
			0x00, 0x24, 0x00, 0x20, 0x00, 0x50, 0x00, 0xd0, 0x00, 0xff, 0x00, 0x25, 0x20, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x50, 0x00, 0x70, 0x00, 0x90, 0x00, 0x68, 0x00, 0x00, 0x00, 0x20, 0x00, 0x40,
			0x00, 0x00, 0x00, 0x20, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x88, 0x00, 0x40,
			0x00, 0x44, 0x00, 0x88, 0x00, 0x10, 0x00, 0x88, 0x00, 0x88, 0x00, 0x20, 0x00, 0x88, 0x00, 0x08,
			0x00, 0x00, 0x00, 0x40, 0x00, 0x18, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x89,
			0x00, 0x12, 0x00, 0x48, 0x00, 0x12, 0x00, 0x80, 0x00, 0x80, 0x00, 0x4c, 0x00, 0x11, 0x00, 0x10,
			0x00, 0x48, 0x00, 0x12, 0x40, 0x11, 0x00, 0x12, 0x80, 0x28, 0x00, 0x44, 0x00, 0x10, 0x00, 0x54,
			0x00, 0x14, 0x80, 0x88, 0x00, 0x10, 0x00, 0x26, 0x40, 0x05, 0x00, 0x16, 0x80, 0x11, 0x00, 0x22,
			0x00, 0x42, 0x00, 0xe0, 0x00, 0x38, 0x00, 0xe0, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb4,
			0x00, 0xa4, 0x00, 0x90, 0x00, 0x94, 0x00, 0x80, 0x00, 0x40, 0x00, 0x90, 0x00, 0xa4, 0x00, 0x20,
			0x00, 0x10, 0x00, 0x28, 0x00, 0x20, 0x00, 0x24, 0x80, 0x48, 0x00, 0x90, 0x00, 0x24, 0x00, 0x90,
			0x00, 0x20, 0x00, 0x10, 0x00, 0x48, 0x00, 0x4d, 0x00, 0x14, 0x00, 0x2a, 0x80, 0x24, 0x00, 0x28,
			0x00, 0x50, 0x00, 0x20, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x57, 0x50, 0x00, 0x00, 0x40, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x70, 0x00, 0xe0, 0x00, 0xf8,
			0x00, 0x70, 0x00, 0x38, 0x00, 0x70, 0x00, 0x70, 0x00, 0x20, 0x00, 0x70, 0x00, 0x70, 0x00, 0x00,
			0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x86, 0x00, 0x1c,
			0x00, 0x30, 0x00, 0x1c, 0x00, 0x78, 0x00, 0x80, 0x00, 0x34, 0x00, 0x11, 0x00, 0x78, 0x00, 0x30,
			0x00, 0x11, 0x80, 0x1f, 0x00, 0x12, 0xe0, 0x2e, 0x00, 0x38, 0x00, 0x10, 0x00, 0x39, 0x00, 0x13,
			0x00, 0x70, 0x00, 0x10, 0x00, 0x19, 0x80, 0x02, 0x00, 0x09, 0x00, 0x31, 0x80, 0x1c, 0x00, 0xfc,
			0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x58,
			0x00, 0x60, 0x00, 0x68, 0x00, 0x70, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x67, 0x00, 0x70, 0x00, 0x10,
			0x00, 0x64, 0x00, 0x70, 0x00, 0x35, 0xc0, 0x6e, 0x00, 0x60, 0x00, 0x38, 0x00, 0x70, 0x00, 0x70,
			0x00, 0xe0, 0x00, 0x30, 0x00, 0x36, 0x00, 0x08, 0x00, 0x11, 0x00, 0x66, 0x00, 0x18, 0x00, 0xf0,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfd, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00
		};
		#endregion

		public VGADriver(OpenCiv1 parent)
		{
			this.oParent = parent;
			this.oCPU = parent.CPU;

			this.aScreens.Add(0, new VGABitmap()); // our Main screen

			// start our VGAForm thread
			this.oVGAThread = new Thread(VGAFormThread);
			this.oVGAThread.Start();

			//CivFonts fonts = CivFonts.ImportFromOldStructure(this.Var_19f0_FontTable);
			//fonts.Serialize("Fonts.xml.gz");

			this.aFonts = CivFonts.Deserialize("Fonts.xml.gz");
		}

		private void VGAFormThread()
		{
			Application.EnableVisualStyles();
			Application.SetCompatibleTextRenderingDefault(false);
			this.oVGAForm = new VGAForm(this);
			Application.Run(this.oVGAForm);
		}

		public ushort Segment
		{
			get { return this.usSegment; }
			set
			{
				this.usSegment = value;
				this.oCPU.WriteWord(this.usSegment, 0x28, this.usSegment);
				this.oCPU.WriteWord(this.usSegment, 0x2a, (ushort)(this.usSegment + 0x13c));
				this.oCPU.WriteWord(this.usSegment, 0x1988, (ushort)(this.usSegment + 0x13c));
			}
		}

		public CPU CPU
		{
			get { return this.oCPU; }
		}

		public BDictionary<int, VGABitmap> Screens
		{
			get { return this.aScreens; }
		}

		public BDictionary<int, VGABitmap> Bitmaps
		{
			get { return this.aBitmaps; }
		}

		public Queue<int> Keys
		{
			get { return this.aKeys; }
		}

		public Point ScreenMouseLocation
		{
			get
			{
				if (this.oVGAForm != null)
					return this.oVGAForm.ScreenMouseLocation;
				else
					return Point.Empty;
			}
		}

		public ushort ScreenMouseButtons
		{
			get
			{
				if (this.oVGAForm != null)
				{
					ushort usTemp = 0;
					usTemp |= (ushort)(((this.oVGAForm.ScreenMouseButtons & MouseButtons.Left) == MouseButtons.Left) ? 1 : 0);
					usTemp |= (ushort)(((this.oVGAForm.ScreenMouseButtons & MouseButtons.Right) == MouseButtons.Right) ? 2 : 0);
					return usTemp;
				}
				else
					return 0;
			}
		}

		#region Memory and Initialization functions
		public void F0_VGA_0a1e_AllocateMemory()
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_0a1e_AllocateMemory()");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock("F0_VGA_0a1e_AllocateMemory()");

			// function body
			this.oCPU.AX.Word = 0x1000; // make underlying code happy
			this.oCPU.BX.Word = 0x9000;
			this.oCPU.Flags.C = false;

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_0a1e_AllocateMemory");
			this.oCPU.Log = oTempLog;
		}

		public void F0_VGA_0a4a_FreeMemory()
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_0a4a_FreeMemory(0x{this.Var_8a0:x4}, 0x{this.Var_8a2:x4})");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_0a4a_FreeMemory(0x{this.Var_8a0:x4}, 0x{this.Var_8a2:x4})");

			// function body
			this.oCPU.AX.Word = 0; // make underlying code happy
			this.oCPU.Flags.C = false;

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_0a4a_FreeMemory");
			this.oCPU.Log = oTempLog;
		}

		public void F0_VGA_0492_GetFreeMemory()
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_0492_GetFreeMemory()");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock("F0_VGA_0492_GetFreeMemory()");
			this.oCPU.CS.Word = this.usSegment; // set this function segment

			// function body
			this.oCPU.AX.High = 0x48;
			this.oCPU.BX.Word = 0xffff;
			this.oCPU.INT(0x21);
			this.oCPU.AX.Word = this.oCPU.BX.Word;

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_0492_GetFreeMemory");
			this.oCPU.Log = oTempLog;
		}

		public void F0_VGA_04ae_AllocateScreen(ushort screenID)
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_04ae_AllocateScreen({screenID})");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_04ae_AllocateScreen({screenID})");

			// function body
			if (!this.aScreens.ContainsKey(screenID))
			{
				lock (this.VGALock)
				{
					VGABitmap bitmap = new VGABitmap();
					bitmap.Visible = false; // additional screens are not shown by default
					this.aScreens.Add(screenID, bitmap);
				}
				if (this.oVGAForm != null)
					this.oVGAForm.OnScreenCountChange();
			}

			this.oCPU.AX.Word = 0xa000; // return something to make underlying code happy

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_04ae_AllocateScreen");
			this.oCPU.Log = oTempLog;
		}
		#endregion

		public void F0_VGA_0224_DrawBufferToScreen()
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_0224_DrawBufferToScreen()");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock("F0_VGA_0224_DrawBufferToScreen()");

			// function body
			if (this.Var_15d2_BufferFlag != 0)
			{
				lock (this.VGALock)
				{
					int iBufferPos = 0;
					VGABitmap mainScreen = this.aScreens.GetValueByKey(0);

					for (int i = 0; i < this.Var_15d0_BufferHeight; i++) // height
					{
						for (int j = 0; j < this.Var_15ce_BufferWidth; j++) // width
						{
							mainScreen.SetPixel(this.Var_15ca_BufferX + j, this.Var_15cc_BufferY + i, this.Var_15d6_Buffer[iBufferPos]);
							iBufferPos++;
						}
					}
				}
			}
			this.Var_15d2_BufferFlag = 0x0;

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_0224_DrawBufferToScreen");
			this.oCPU.Log = oTempLog;
		}

		public void F0_VGA_0270(short xPos, short yPos, ushort bufferPtr)
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_0270({xPos}, {yPos}, 0x{bufferPtr:x4})");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_0270({xPos}, {yPos}, 0x{bufferPtr:x4})");
			this.oCPU.CS.Word = this.usSegment; // set this function segment

			// function body
			/*this.Var_15c0 = bitmapPtr;
			this.oCPU.AX.Word = xPos;
			this.Var_15c2_xPos = xPos;
			this.oCPU.BX.Word = this.oCPU.ReadWord(bitmapPtr, 0x0);
			this.Var_15c6 = this.oCPU.BX.Word;
			if (this.oCPU.BX.Word == 0) goto L0306;
			this.oCPU.AX.Word = this.oCPU.ORWord(this.oCPU.AX.Word, this.oCPU.AX.Word);
			if (this.oCPU.Flags.NS) goto L02a0;
			this.oCPU.AX.Word = this.oCPU.NEGWord(this.oCPU.AX.Word);
			this.oCPU.BX.Word = this.oCPU.SUBWord(this.oCPU.BX.Word, this.oCPU.AX.Word);
			if (this.oCPU.Flags.BE) goto L0306;
			this.oCPU.AX.Word = 0x0;

		L02a0:
			this.oCPU.CX.Word = 320;
			this.oCPU.CX.Word = this.oCPU.SUBWord(this.oCPU.CX.Word, this.oCPU.AX.Word);
			if (this.oCPU.Flags.BE) goto L0306;
			this.oCPU.CMPWord(this.oCPU.BX.Word, this.oCPU.CX.Word);
			if (this.oCPU.Flags.BE) goto L02ad;
			this.oCPU.BX.Word = this.oCPU.CX.Word;

		L02ad:
			this.Var_15ce_BufferWidth = this.oCPU.BX.Word;
			this.Var_15ca_BufferX = this.oCPU.AX.Word;
			this.oCPU.AX.Word = 0x200;
			this.oCPU.CWD(this.oCPU.AX, this.oCPU.DX);
			this.oCPU.DIVWord(this.oCPU.AX, this.oCPU.DX, this.oCPU.BX.Word);
			this.oCPU.DX.Word = this.oCPU.AX.Word;
			this.oCPU.AX.Word = yPos;
			this.Var_15c4_yPos = this.oCPU.AX.Word;
			this.oCPU.BX.Word = this.oCPU.ReadWord(bitmapPtr, 0x2);
			this.Var_15c8 = this.oCPU.BX.Word;
			this.oCPU.BX.Word = this.oCPU.ORWord(this.oCPU.BX.Word, this.oCPU.BX.Word);
			if (this.oCPU.Flags.E) goto L0306;
			this.oCPU.AX.Word = this.oCPU.ORWord(this.oCPU.AX.Word, this.oCPU.AX.Word);
			if (this.oCPU.Flags.NS) goto L02db;
			this.oCPU.AX.Word = this.oCPU.NEGWord(this.oCPU.AX.Word);
			this.oCPU.BX.Word = this.oCPU.SUBWord(this.oCPU.BX.Word, this.oCPU.AX.Word);
			if (this.oCPU.Flags.BE) goto L0306;
			this.oCPU.AX.Word = 0x0;

		L02db:
			this.oCPU.CX.Word = 0xc8;
			this.oCPU.CX.Word = this.oCPU.SUBWord(this.oCPU.CX.Word, this.oCPU.AX.Word);
			if (this.oCPU.Flags.BE) goto L0306;
			this.oCPU.CMPWord(this.oCPU.BX.Word, this.oCPU.CX.Word);
			if (this.oCPU.Flags.BE) goto L02e8;
			this.oCPU.BX.Word = this.oCPU.CX.Word;

		L02e8:
			this.oCPU.CMPWord(this.oCPU.BX.Word, this.oCPU.DX.Word);
			if (this.oCPU.Flags.BE) goto L02ee;
			this.oCPU.BX.Word = this.oCPU.DX.Word;

		L02ee:
			this.Var_15d0_BufferHeight = this.oCPU.BX.Word;
			this.Var_15cc_BufferY = this.oCPU.AX.Word;
			this.Var_15d2_BufferFlag = 1;
			
			this.oCPU.PushWord(this.oCPU.CS.Word); // stack management - push return segment
			this.oCPU.PushWord(0x0303); // stack management - push return offset
			// Instruction address 0x0000:0x0300, size: 3
			F0_VGA_030e_FillBuffer(0);
			this.oCPU.PopDWord(); // stack management - pop return offset and segment
			this.oCPU.CS.Word = this.usSegment; // restore this function segment

		L0303:*/
			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_0270");
			this.oCPU.Log = oTempLog;
			return;

		/*L0306:
			this.Var_15d2_BufferFlag = 0;
			goto L0303;*/
		}

		public void F0_VGA_030e_FillBuffer(ushort screenID)
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_030e_FillBuffer({screenID})");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_030e_FillBuffer({screenID})");

			// function body
			this.oCPU.PushWord(this.oCPU.SI.Word);
			this.oCPU.PushWord(this.oCPU.DI.Word);
			this.oCPU.PushWord(this.oCPU.DS.Word);
			this.oCPU.PushWord(this.oCPU.ES.Word);

			this.Var_15d4_ScreenID = screenID;

			if (this.Var_15d2_BufferFlag != 0)
			{
				if (this.aScreens.ContainsKey(screenID))
				{
					lock (this.VGALock)
					{
						VGABitmap screen = this.aScreens.GetValueByKey(screenID);

						int iBufferPos = 0;

						for (int i = 0; i < this.Var_15d0_BufferHeight; i++)
						{
							for (int j = 0; j < this.Var_15ce_BufferWidth; j++)
							{
								this.Var_15d6_Buffer[iBufferPos] = screen.GetPixel(this.Var_15ca_BufferX + j, this.Var_15cc_BufferY + i);
								iBufferPos++;
							}
						}
					}

					this.oCPU.PushWord(199);
					this.oCPU.PushWord(319);
					this.oCPU.PushWord(0);
					this.oCPU.PushWord(0);
					this.oCPU.PushWord(this.Var_15d4_ScreenID);
					ushort rectPtr = this.oCPU.SP.Word;

					// Instruction address 0x0000:0x0380, size: 3
					F0_VGA_0c3e_DrawBitmapToScreen(rectPtr, this.Var_15c2_xPos, this.Var_15c4_yPos, this.Var_15c0);
					this.oCPU.CS.Word = this.usSegment; // restore this function segment

					// free Rect structure
					this.oCPU.SP.Word = this.oCPU.ADDWord(this.oCPU.SP.Word, 0xa);
				}
				else
				{
					throw new Exception($"The screen {screenID} is not allocated");
				}
			}
			this.oCPU.ES.Word = this.oCPU.PopWord();
			this.oCPU.DS.Word = this.oCPU.PopWord();
			this.oCPU.DI.Word = this.oCPU.PopWord();
			this.oCPU.SI.Word = this.oCPU.PopWord();

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_030e_FillBuffer");
			this.oCPU.Log = oTempLog;
		}

		public void F0_VGA_063c(ushort screenID)
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_063c(0x{screenID:x4})");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_063c(0x{screenID:x4})");
			this.oCPU.CS.Word = this.usSegment; // set this function segment

			// function body
			this.oCPU.PushWord(this.oCPU.BP.Word);
			this.oCPU.BP.Word = this.oCPU.SP.Word;
			this.oCPU.PushWord(this.oCPU.SI.Word);
			this.oCPU.PushWord(this.oCPU.DI.Word);
			this.oCPU.PushWord(this.oCPU.DS.Word);

			if (screenID != 0)
			{
				this.oCPU.PushWord(this.oCPU.CS.Word); // stack management - push return segment
				this.oCPU.PushWord(0x0650); // stack management - push return offset
				// Instruction address 0x0000:0x064d, size: 3
				F0_VGA_030e_FillBuffer(screenID);
				this.oCPU.PopDWord(); // stack management - pop return offset and segment
				this.oCPU.CS.Word = this.usSegment; // restore this function segment

				if (this.aScreens.ContainsKey(0))
				{
					if (this.aScreens.ContainsKey(screenID))
					{
						lock (this.VGALock)
						{
							VGABitmap mainScreen = this.aScreens.GetValueByKey(0);
							VGABitmap screen = this.aScreens.GetValueByKey(screenID);

							mainScreen.DrawImage(Point.Empty, screen, new Rectangle(0, 0, 320, 100), false);
						}
					}
					else
					{
						throw new Exception($"The screen {screenID} is not allocated");
					}
				}
				else
				{
					throw new Exception($"The screen 0 is not allocated");
				}
			}

			this.oCPU.DS.Word = this.oCPU.PopWord();
			this.oCPU.DI.Word = this.oCPU.PopWord();
			this.oCPU.SI.Word = this.oCPU.PopWord();
			this.oCPU.BP.Word = this.oCPU.PopWord();
			// Far return
			this.oCPU.Log.ExitBlock("'F0_VGA_063c'");
			this.oCPU.Log = oTempLog;
		}

		#region Image load functions
		public void F0_VGA_03b1_LineToBuffer(ushort bufferPtr, ushort screenID, ushort xPos, ushort yPos, ushort width)
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_03b1_LineToBuffer(0x{bufferPtr:x4}, {screenID}, {xPos}, {yPos}, {width})");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_03b1_LineToBuffer(0x{bufferPtr:x4}, {screenID}, {xPos}, {yPos}, {width})");

			// function body
			if (this.aScreens.ContainsKey(screenID))
			{
				lock (this.VGALock)
				{
					VGABitmap screen = this.aScreens.GetValueByKey(screenID);

					uint iBufferPos = CPUMemory.ToLinearAddress(this.oCPU.DS.Word, bufferPtr);

					for (int i = 0; i < width; i++)
					{
						this.oCPU.Memory.WriteByte(iBufferPos, screen.GetPixel(xPos + i, yPos));
						iBufferPos++;
					}
				}
			}
			else
			{
				throw new Exception($"The screen {screenID} is not allocated");
			}

			// Far return
			this.oCPU.Log.ExitBlock("'F0_VGA_03b1'");
			this.oCPU.Log = oTempLog;
		}

		public void F0_VGA_03df_BufferToLine(ushort bufferPtr, ushort screenID, ushort xPos, ushort yPos, ushort width)
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_03df_BufferToLine(0x{bufferPtr:x4}, {screenID}, {xPos}, {yPos}, {width})");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_03df_BufferToLine(0x{bufferPtr:x4}, {screenID}, {xPos}, {yPos}, {width})");

			// function body
			if (this.aScreens.ContainsKey(screenID))
			{
				lock (this.VGALock)
				{
					VGABitmap screen = this.aScreens.GetValueByKey(screenID);

					uint iBufferPos = CPUMemory.ToLinearAddress(this.oCPU.DS.Word, bufferPtr);

					for (int i = 0; i < width; i++)
					{
						screen.SetPixel(xPos + i, yPos, this.oCPU.Memory.ReadByte(iBufferPos));
						iBufferPos++;
					}
				}
			}
			else
			{
				throw new Exception($"The screen {screenID} is not allocated");
			}

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_03df_BufferToLine");
			this.oCPU.Log = oTempLog;
		}

		public void F0_VGA_03df_BufferToLine(ushort screenID, byte[] buffer, ushort xPos, ushort yPos, ushort width)
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_03df_BufferToLine(buffer, {screenID}, {xPos}, {yPos}, {width})");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_03df_BufferToLine(buffer, {screenID}, {xPos}, {yPos}, {width})");

			// function body
			if (this.aScreens.ContainsKey(screenID))
			{
				lock (this.VGALock)
				{
					VGABitmap screen = this.aScreens.GetValueByKey(screenID);

					int iBufferPos = 0;

					for (int i = 0; i < width; i++)
					{
						screen.SetPixel(xPos + i, yPos, buffer[iBufferPos]);
						iBufferPos++;
					}
				}
			}
			else
			{
				throw new Exception($"The screen {screenID} is not allocated");
			}

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_03df_BufferToLine");
			this.oCPU.Log = oTempLog;
		}
		#endregion

		#region Icon load functions
		public void F0_VGA_0a78(ushort param1, ushort param2)
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling 'F0_VGA_0a78'({param1}, {param2})");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_0a78({param1}, {param2})");

			// function body
			if (this.Var_8a4 <= this.Var_8a0)
			{
				this.Var_89e = 0;
				this.Var_8a0 = 0;

				this.oCPU.AX.Word = 0x0;
			}
			else
			{
				this.Var_8a6 = (ushort)(this.Var_8a4 - this.Var_8a0);
				if (this.Var_8a6 >= 0x1000)
				{
					this.Var_8a6 = 0xfff;
				}

				this.Var_8a6 = this.oCPU.SHLWord(this.Var_8a6, 4);

				this.Var_8b0 = param1;
				this.oCPU.Memory.WriteWord(this.Var_8a0, this.Var_89e, param1);
				this.Var_89e += 2;

				this.Var_8ae = param2;
				this.oCPU.Memory.WriteWord(this.Var_8a0, this.Var_89e, param2);
				this.Var_89e += 2;

				this.oCPU.AX.Word = 1;
			}

			// Far return
			this.oCPU.Log.ExitBlock("'F0_VGA_0a78'");
			this.oCPU.Log = oTempLog;
		}

		public void F0_VGA_0ac6()
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling 'F0_VGA_0ac6'");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock("'F0_VGA_0ac6'");
			this.oCPU.CS.Word = this.usSegment; // set this function segment

			// function body
			this.oCPU.AX.Word = 0x0;
			this.oCPU.Temp.Word = this.Var_89e;
			this.Var_89e = this.oCPU.AX.Word;
			this.oCPU.AX.Word = this.oCPU.Temp.Word;
			this.oCPU.AX.Word = this.oCPU.ADDWord(this.oCPU.AX.Word, 0xf);
			this.oCPU.AX.Word = this.oCPU.SHRWord(this.oCPU.AX.Word, 0x1);
			this.oCPU.AX.Word = this.oCPU.SHRWord(this.oCPU.AX.Word, 0x1);
			this.oCPU.AX.Word = this.oCPU.SHRWord(this.oCPU.AX.Word, 0x1);
			this.oCPU.AX.Word = this.oCPU.SHRWord(this.oCPU.AX.Word, 0x1);
			this.oCPU.AX.Word = this.oCPU.ADDWord(this.oCPU.AX.Word, this.Var_8a0);
			this.oCPU.Temp.Word = this.Var_8a0;
			this.Var_8a0 = this.oCPU.AX.Word;
			this.oCPU.AX.Word = this.oCPU.Temp.Word;
			// Far return
			this.oCPU.Log.ExitBlock("'F0_VGA_0ac6'");
			this.oCPU.Log = oTempLog;
		}

		public void F0_VGA_0ae3()
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling 'F0_VGA_0ae3'");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock("'F0_VGA_0ae3'");
			this.oCPU.CS.Word = this.usSegment; // set this function segment

			// function body
			this.oCPU.PushWord(this.oCPU.BP.Word);
			this.oCPU.BP.Word = this.oCPU.SP.Word;
			this.oCPU.PushWord(this.oCPU.SI.Word);
			this.oCPU.PushWord(this.oCPU.DI.Word);
			this.oCPU.SI.Word = this.oCPU.ReadWord(this.oCPU.SS.Word, (ushort)(this.oCPU.BP.Word + 0x6));
			// LES
			this.oCPU.DI.Word = this.Var_89e;
			this.oCPU.ES.Word = this.Var_8a0;
			this.oCPU.AX.Word = this.oCPU.ES.Word;
			this.oCPU.AX.Word = this.oCPU.ORWord(this.oCPU.AX.Word, this.oCPU.AX.Word);
			if (this.oCPU.Flags.NE) goto L0af9;
			goto L0b81;

		L0af9:
			this.oCPU.AX.Word = this.Var_8b0;
			this.oCPU.AX.Word = this.oCPU.ADDWord(this.oCPU.AX.Word, 0x4);
			this.oCPU.AX.Word = this.oCPU.ADDWord(this.oCPU.AX.Word, this.oCPU.DI.Word);
			this.oCPU.CMPWord(this.oCPU.AX.Word, this.Var_8a6);
			if (this.oCPU.Flags.BE) goto L0b17;
			this.oCPU.WriteWord(this.oCPU.ES.Word, 0x2, this.oCPU.DECWord(this.oCPU.ReadWord(this.oCPU.ES.Word, 0x2)));
			this.oCPU.AX.Word = 0x0;
			this.Var_8a4 = this.oCPU.AX.Word;
			goto L0b81;

		L0b17:
			this.oCPU.AX.Word = 0x0;
			this.Var_8a8 = this.oCPU.AX.Word;
			this.Var_8aa = this.oCPU.AX.Word;
			this.Var_8ac = this.oCPU.AX.Word;
			this.oCPU.BP.Word = this.oCPU.DI.Word;
			this.oCPU.STOSWord();
			this.oCPU.STOSWord();
			this.oCPU.CX.Word = this.Var_8b0;

		L0b2e:
			this.oCPU.LODSByte();
			this.oCPU.AX.Low = this.oCPU.ORByte(this.oCPU.AX.Low, this.oCPU.AX.Low);
			if (this.oCPU.Flags.E) goto L0b3d;
			this.Var_8aa = 0;
			goto L0b54;

		L0b3d:
			this.oCPU.CMPWord(this.Var_8ac, 0x0);
			if (this.oCPU.Flags.NE) goto L0b4f;
			this.Var_8a8++;
			if (this.oCPU.Loop(this.oCPU.CX)) goto L0b2e;
			goto L0b5c;

		L0b4f:
			this.Var_8aa++;

		L0b54:
			this.Var_8ac++;
			this.oCPU.STOSByte();
			if (this.oCPU.Loop(this.oCPU.CX)) goto L0b2e;

			L0b5c:
			this.oCPU.AX.Word = this.Var_8ac;
			this.oCPU.BX.Word = this.Var_8a8;
			this.oCPU.CX.Word = this.Var_8aa;
			this.oCPU.CX.Word = this.oCPU.ORWord(this.oCPU.CX.Word, this.oCPU.CX.Word);
			if (this.oCPU.Flags.E) goto L0b72;
			this.oCPU.AX.Word = this.oCPU.SUBWord(this.oCPU.AX.Word, this.oCPU.CX.Word);
			this.oCPU.DI.Word = this.oCPU.SUBWord(this.oCPU.DI.Word, this.oCPU.CX.Word);

		L0b72:
			this.oCPU.WriteWord(this.oCPU.ES.Word, (ushort)(this.oCPU.BP.Word + 0x0), this.oCPU.AX.Word);
			this.oCPU.WriteWord(this.oCPU.ES.Word, (ushort)(this.oCPU.BP.Word + 0x2), this.oCPU.BX.Word);
			this.Var_89e = this.oCPU.DI.Word;
			this.oCPU.AX.Word = this.oCPU.ES.Word;

		L0b81:
			this.oCPU.DI.Word = this.oCPU.PopWord();
			this.oCPU.SI.Word = this.oCPU.PopWord();
			this.oCPU.BP.Word = this.oCPU.PopWord();
			// Far return
			this.oCPU.Log.ExitBlock("'F0_VGA_0ae3'");
			this.oCPU.Log = oTempLog;
		}
		#endregion

		#region Palette functions
		public void F0_VGA_010c_SetColorsByIndexArray(ushort indexArrayPtr)
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_010c_SetColorsByIndexArray()");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock("F0_VGA_010c_SetColorsByIndexArray()");

			// function body
			lock (this.VGALock)
			{
				Color[] aColors = new Color[16];

				for (int i = 0; i < 16; i++)
				{
					aColors[i] = VGABitmap.Palette1[this.oCPU.ReadByte(this.oCPU.DS.Word, indexArrayPtr)];

					indexArrayPtr++;
				}

				// set colors to all planes, as this is what original code does
				for (int i = 0; i < this.aScreens.Count; i++)
				{
					this.aScreens[i].Value.SetColorsFromArray(aColors, 0, 0, 16);
				}
			}

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_010c_SetColorsByIndexArray");
			this.oCPU.Log = oTempLog;
		}

		public void SetColor(int index, Color color)
		{
			lock (this.VGALock)
			{
				this.oCPU.Log.WriteLine($"Setting palette index {index}, #{color.A:x2}{color.R:x2}{color.G:x2}{color.B:x2}");

				// set colors to all planes, as this is what original code does
				for (int i = 0; i < this.aScreens.Count; i++)
				{
					this.aScreens[i].Value.SetColor(index, color);
				}
			}
		}

		public void F0_VGA_0162_SetColorsFromColorStruct(ushort colorStructPtr)
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_0162_SetColorsFromStruct(0x{colorStructPtr:x4})");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_0162_SetColorsFromStruct(0x{colorStructPtr:x4})");

			// function body
			if (this.oCPU.ReadWord(this.oCPU.DS.Word, colorStructPtr) == 0x304d)
			{
				int iFrom = this.oCPU.ReadByte(this.oCPU.DS.Word, (ushort)(colorStructPtr + 0x4));
				int iTo = this.oCPU.ReadByte(this.oCPU.DS.Word, (ushort)(colorStructPtr + 0x5));
				int iCount = (iTo - iFrom) + 1;
				colorStructPtr += 6;

				lock (this.VGALock)
				{
					Color[] aColors = new Color[iCount];

					for (int i = 0; i < iCount; i++)
					{
						aColors[i] = VGABitmap.Color18ToColor(this.oCPU.Memory.ReadByte(this.oCPU.DS.Word, (ushort)(colorStructPtr + (i * 3))),
							this.oCPU.Memory.ReadByte(this.oCPU.DS.Word, (ushort)(colorStructPtr + (i * 3) + 1)),
						this.oCPU.Memory.ReadByte(this.oCPU.DS.Word, (ushort)(colorStructPtr + (i * 3) + 2)));

						this.oCPU.Log.WriteLine($"Setting palette index {iFrom + i}, #{aColors[i].A:x2}{aColors[i].R:x2}{aColors[i].G:x2}{aColors[i].B:x2}");
					}

					// set colors to all planes, as this is what original code does
					for (int i = 0; i < this.aScreens.Count; i++)
					{
						this.aScreens[i].Value.SetColorsFromArray(aColors, iFrom, iFrom, iCount);
					}
				}
			}

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_0162_SetColorsFromStruct");
			this.oCPU.Log = oTempLog;
		}

		public void SetColorsFromColorStruct(byte[] colorStruct)
		{
			int iStructPos = 0;

			if (colorStruct[iStructPos] == 0x4d && colorStruct[iStructPos + 1] == 0x30)
			{
				int iFrom = colorStruct[iStructPos + 4];
				int iTo = colorStruct[iStructPos + 5];
				int iCount = (iTo - iFrom) + 1;
				iStructPos += 6;

				lock (this.VGALock)
				{
					Color[] aColors = new Color[iCount];

					for (int i = 0; i < iCount; i++)
					{
						aColors[i] = VGABitmap.Color18ToColor(colorStruct[iStructPos + (i * 3)],
							colorStruct[iStructPos + (i * 3) + 1],
							colorStruct[iStructPos + (i * 3) + 2]);

						this.oCPU.Log.WriteLine($"Setting palette index {iFrom + i}, #{aColors[i].A:x2}{aColors[i].R:x2}{aColors[i].G:x2}{aColors[i].B:x2}");
					}

					// set colors to all screens, as this is what original code does
					for (int i = 0; i < this.aScreens.Count; i++)
					{
						this.aScreens[i].Value.SetColorsFromArray(aColors, iFrom, iFrom, iCount);
					}
				}
			}
		}
		#endregion

		#region Drawing functions
		public void F0_VGA_020c_SetFrontColorAndPixelMode(byte frontColor, byte pixelMode)
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_020c_SetFrontColorAndPixelMode({frontColor}, {(PixelWriteModeEnum)pixelMode})");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_020c_SetFrontColorAndPixelMode({frontColor}, {(PixelWriteModeEnum)pixelMode})");

			// function body
			this.Var_198a_FrontColor = frontColor;
			this.Var_198b_PixelMode = (PixelWriteModeEnum)(pixelMode & 3);

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_020c_SetFrontColorAndPixelMode");
			this.oCPU.Log = oTempLog;
		}

		public void F0_VGA_046d_SetPositionWidthScreenID(ushort structAAPtr)
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_046d_SetPositionWidthScreenID()");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock("F0_VGA_046d_SetPositionWidthScreenID()");

			// function body
			this.Var_1980_ActiveScreenID = this.oCPU.ReadWord(this.oCPU.DS.Word, structAAPtr);
			this.Var_1982_XOffset = this.oCPU.ReadWord(this.oCPU.DS.Word, (ushort)(structAAPtr + 0x2));
			this.Var_1984_YOffset = this.oCPU.ReadWord(this.oCPU.DS.Word, (ushort)(structAAPtr + 0x4));
			this.Var_1986_Width = this.oCPU.ReadWord(this.oCPU.DS.Word, (ushort)(structAAPtr + 0x6));

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_046d_SetPositionWidthScreenID");
			this.oCPU.Log = oTempLog;
		}

		public void F0_VGA_06b7_DrawScreenToMainScreen(ushort screenID, ushort param1)
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_06b7_DrawScreenToMainScreen({screenID}, {param1})");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_06b7_DrawScreenToMainScreen({screenID}, {param1})");

			// this is either random fade in image, or a scrolling from right to left
			if (screenID != 0)
			{
				if (this.aScreens.ContainsKey(screenID))
				{
					lock (this.VGALock)
					{
						VGABitmap mainScreen = this.aScreens.GetValueByKey(0);

						mainScreen.DrawImage(this.aScreens.GetValueByKey(screenID));
					}
				}
				else
				{
					throw new Exception($"The screen {screenID} is not allocated");
				}
			}

			// Far return
			this.oCPU.Log.ExitBlock("'F0_VGA_06b7_DrawScreenToMainScreen'");
			this.oCPU.Log = oTempLog;
			return;
		}

		public void F0_VGA_07d8_DrawImage(ushort srcRectPtr, ushort xFrom, ushort yFrom, ushort width, ushort height, ushort destRectPtr, ushort xTo, ushort yTo)
		{
			CivRectangle rectFrom = new CivRectangle(this.oCPU, CPUMemory.ToLinearAddress(this.oCPU.DS.Word, srcRectPtr));
			int iXOffsetFrom = rectFrom.X + xFrom;
			int iYOffsetFrom = rectFrom.Y + yFrom;

			CivRectangle rectTo = new CivRectangle(this.oCPU, CPUMemory.ToLinearAddress(this.oCPU.DS.Word, destRectPtr));
			int iXOffsetTo = rectTo.X + xTo;
			int iYOffsetTo = rectTo.Y + yTo;

			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_07d8_DrawImage({rectTo.ScreenID}, {iXOffsetTo}, {iYOffsetTo}, {rectFrom.ScreenID}, {iXOffsetFrom}, {iYOffsetFrom}, {width}, {height})");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_07d8_DrawImage({rectTo.ScreenID}, {iXOffsetTo}, {iYOffsetTo}, {rectFrom.ScreenID}, {iXOffsetFrom}, {iYOffsetFrom}, {width}, {height})");
			//this.oCPU.CS.Word = this.usSegment; // set this function segment

			// function body
			if (this.aScreens.ContainsKey(rectFrom.ScreenID))
			{
				VGABitmap srcBitmap = this.aScreens.GetValueByKey(rectFrom.ScreenID);

				if (this.aScreens.ContainsKey(rectTo.ScreenID))
				{
					lock (this.VGALock)
					{
						VGABitmap destBitmap = this.aScreens.GetValueByKey(rectTo.ScreenID);

						destBitmap.DrawImage(iXOffsetTo, iYOffsetTo, srcBitmap, new Rectangle(iXOffsetFrom, iYOffsetFrom, width, height), false);
					}
				}
				else
				{
					throw new Exception($"The screen {rectTo.ScreenID} is not allocated");
				}
			}
			else
			{
				throw new Exception($"The screen {rectFrom.ScreenID} is not allocated");
			}


			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_07d8_DrawImage");
			this.oCPU.Log = oTempLog;
		}

		public void F0_VGA_0b85_ScreenToBitmap(ushort screenID, ushort xPos, ushort yPos, ushort width, ushort height)
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_0b85_ScreenToBitmap({screenID}, {xPos}, {yPos}, {width}, {height})");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_0b85_ScreenToBitmap({screenID}, {xPos}, {yPos}, {width}, {height})");

			// function body
			if (this.aScreens.ContainsKey(screenID))
			{
				lock (this.VGALock)
				{
					VGABitmap screen = this.aScreens.GetValueByKey(screenID);
					VGABitmap bitmap = new VGABitmap(width, height);
					Rectangle rect = new Rectangle(xPos, yPos, width, height);
					screen.CopyPalette(bitmap);

					bitmap.DrawImage(Point.Empty, screen, rect, false);

					this.aBitmaps.Add(this.iBitmapNextID, bitmap);
					this.oCPU.Log.WriteLine($"// Bitmap ID: 0x{this.iBitmapNextID:x4}");

					//bitmap.Bitmap.Save($"Bitmaps{Path.DirectorySeparatorChar}Image_{this.iBitmapNextID:x4}.png", ImageFormat.Png);

					this.oCPU.AX.Word = (ushort)this.iBitmapNextID;
					this.iBitmapNextID++;
				}
			}
			else
			{
				throw new Exception($"The screen {screenID} is not allocated");
			}

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_0b85_ScreenToBitmap");
			this.oCPU.Log = oTempLog;
		}

		public void F0_VGA_0c3e_DrawBitmapToScreen(ushort rectPtr, short xPos, short yPos, ushort bitmapPtr)
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_0c3e(0x{rectPtr:x4}, {xPos}, {yPos}, 0x{bitmapPtr:x4})");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_0c3e(0x{rectPtr:x4}, {xPos}, {yPos}, 0x{bitmapPtr:x4})");
			this.oCPU.CS.Word = this.usSegment; // set this function segment

			// function body
			CivRectangle rect = new CivRectangle(this.oCPU, CPUMemory.ToLinearAddress(this.oCPU.DS.Word, rectPtr));

			if (this.aScreens.ContainsKey(rect.ScreenID))
			{
				if (this.aBitmaps.ContainsKey(bitmapPtr))
				{
					lock (this.VGALock)
					{
						VGABitmap screen = this.aScreens.GetValueByKey(rect.ScreenID);
						VGABitmap bitmap = this.aBitmaps.GetValueByKey(bitmapPtr);

						screen.DrawImage(rect.X + xPos, rect.Y + yPos, bitmap, true);
					}
				}
				else
				{
					Console.WriteLine($"The bitmap 0x{bitmapPtr:x4} is not allocated");
				}
			}
			else
			{
				throw new Exception($"The screen {rect.ScreenID} is not allocated");
			}

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_0c3e");
			this.oCPU.Log = oTempLog;
		}

		public void F0_VGA_0d47_DrawBitmapToScreen(ushort rectPtr, short xPos, short yPos, ushort bitmapPtr)
		{
			CivRectangle rect = new CivRectangle(this.oCPU, CPUMemory.ToLinearAddress(this.oCPU.DS.Word, rectPtr));

			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_0d47_DrawBitmapToScreen(0x{rectPtr:x4}, {xPos}, {yPos}, 0x{bitmapPtr:x4})");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_0d47_DrawBitmapToScreen(0x{rectPtr:x4}, {xPos}, {yPos}, 0x{bitmapPtr:x4})");
			this.oCPU.CS.Word = this.usSegment; // set this function segment

			// function body
			if (bitmapPtr == 0xb103)
			{
				Console.Write("");
			}

			if (this.aScreens.ContainsKey(rect.ScreenID))
			{
				if (this.aBitmaps.ContainsKey(bitmapPtr))
				{
					lock (this.VGALock)
					{
						VGABitmap screen = this.aScreens.GetValueByKey(rect.ScreenID);
						VGABitmap bitmap = this.aBitmaps.GetValueByKey(bitmapPtr);

						screen.DrawImage(rect.X + xPos, rect.Y + yPos, bitmap, true);
					}
				}
				else
				{
					Console.WriteLine($"The bitmap 0x{bitmapPtr:x4} is not allocated");
				}
			}
			else
			{
				throw new Exception($"The screen {rect.ScreenID} is not allocated");
			}

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_0d47_DrawBitmapToScreen");
			this.oCPU.Log = oTempLog;
		}

		public void F0_VGA_038c_GetPixel(ushort screenID, ushort xPos, ushort yPos)
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_038c_GetPixel({screenID}, {xPos}, {yPos})");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_038c_GetPixel({screenID}, {xPos}, {yPos})");

			// function body
			if (this.aScreens.ContainsKey(screenID))
			{
				lock (this.VGALock)
				{
					this.oCPU.AX.Word = this.aScreens.GetValueByKey(screenID).GetPixel(xPos, yPos);
				}
			}
			else
			{
				throw new Exception($"The screen {screenID} is not allocated");
			}

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_038c_GetPixel");
			this.oCPU.Log = oTempLog;
		}

		public void F0_VGA_0550_SetPixel(short xPos, short yPos)
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_0550_SetPixel({xPos}, {yPos})");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_0550_SetPixel({xPos}, {yPos})");

			// function body
			if (this.aScreens.ContainsKey(this.Var_1980_ActiveScreenID))
			{
				lock (this.VGALock)
				{
					VGABitmap screen = this.aScreens.GetValueByKey(this.Var_1980_ActiveScreenID);

					xPos += (short)this.Var_1982_XOffset;
					yPos += (short)this.Var_1984_YOffset;

					screen.SetPixel(xPos, yPos, this.Var_198a_FrontColor, this.Var_198b_PixelMode);
				}
			}
			else
			{
				throw new Exception($"The screen {this.Var_1980_ActiveScreenID} is not allocated");
			}

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_0550");
			this.oCPU.Log = oTempLog;
		}

		public void F0_VGA_0599_DrawLine(CivRectangle rect, short x1, short y1, short x2, short y2, ushort mode)
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_0599_DrawLine({x1}, {y1}, {x2}, {y2})");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_0599_DrawLine({x1}, {y1}, {x2}, {y2})");
			//this.oCPU.CS.Word = this.usSegment; // set this function segment

			if (this.aScreens.ContainsKey(rect.ScreenID))
			{
				lock (this.VGALock)
				{
					VGABitmap screen = this.aScreens.GetValueByKey(rect.ScreenID);

					x1 += rect.X;
					y1 += rect.Y;
					x2 += rect.X;
					y2 += rect.Y;

					screen.DrawLine(x1, y1, x2, y2, (byte)(mode & 0xff), (PixelWriteModeEnum)((mode & 0xff00) >> 8));
				}
			}
			else
			{
				throw new Exception($"The screen {rect.ScreenID} is not allocated");
			}

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_0599_DrawLine");
			this.oCPU.Log = oTempLog;
		}

		public void F0_VGA_040a_FillRectangle(int screenID, Rectangle rect)
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_040a_FillRectangle({screenID}, {rect.X}, {rect.Y}, {rect.Width}, {rect.Height})");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_040a_FillRectangle({screenID}, {rect.X}, {rect.Y}, {rect.Width}, {rect.Height})");

			// function body
			if (this.aScreens.ContainsKey(screenID))
			{
				lock (this.VGALock)
				{
					this.aScreens.GetValueByKey(screenID).FillRectangle(rect, this.Var_198a_FrontColor, Var_198b_PixelMode);
				}
			}
			else
			{
				throw new Exception($"The screen {screenID} is not allocated");
			}

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_040a_FillRectangle");
			this.oCPU.Log = oTempLog;
		}

		public void F0_VGA_009a_ReplaceColor(ushort struct1, ushort xPos, ushort yPos, ushort width, ushort height, byte oldColor, byte newColor)
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_009a_ReplaceColor(0x{struct1:x4}, {xPos}, {yPos}, {width}, {height}, {oldColor}, {newColor})");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_009a_ReplaceColor(0x{struct1:x4}, {xPos}, {yPos}, {width}, {height}, {oldColor}, {newColor})");

			// function body
			lock (this.VGALock)
			{
				ushort usScreenID = this.oCPU.ReadWord(this.oCPU.DS.Word, struct1);
				int iTop = this.oCPU.ReadWord(this.oCPU.DS.Word, (ushort)(struct1 + 0x2)) + xPos;
				int iLeft = this.oCPU.ReadWord(this.oCPU.DS.Word, (ushort)(struct1 + 0x4)) + yPos;

				if (this.aScreens.ContainsKey(usScreenID))
				{
					this.aScreens.GetValueByKey(usScreenID).ReplaceColor(new Rectangle(iTop, iLeft, width, height), oldColor, newColor);
				}
				else
				{
					throw new Exception($"The screen {usScreenID} is not allocated");
				}
			}

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_009a_ReplaceColor");
			this.oCPU.Log = oTempLog;
		}
		#endregion

		#region Fonts
		public void F0_VGA_115d_GetCharWidth(ushort fontID, byte ch)
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_115d_GetCharWidth({fontID}, '{(char)ch}')");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_115d_GetCharWidth({fontID}, '{(char)ch}')");

			// function body
			this.oCPU.AX.Word = (ushort)GetDrawStringSize(fontID, new string((char)ch, 1)).Width;

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_115d_GetCharWidth");
			this.oCPU.Log = oTempLog;
		}

		public Size GetDrawStringSize(int fontID, string text)
		{
			int iWidth = 0;
			int iHeight = 0;

			if (this.aFonts.ContainsKey(fontID))
			{
				CivFont font = this.aFonts.GetValueByKey(fontID);

				for (int i = 0; i < text.Length; i++)
				{
					char ch = text[i];
					CivFontCharacter fontCh;

					//if (i > 0)
						iWidth += font.CharacterWidthSpacing;

					if (font.Characters.ContainsKey(ch))
					{
						fontCh = font.Characters.GetValueByKey(ch);
					}
					else
					{
						// unknown char, use '?'
						fontCh = font.Characters.GetValueByKey('?');
					}
					iWidth += fontCh.Width;
					iHeight = Math.Max(iHeight, fontCh.Height);
					iHeight += font.LineSpacing;
				}
			}
			else
			{
				throw new Exception($"Unknown Font {fontID}");
			}

			return new Size(iWidth, iHeight);
		}

		public void F0_VGA_11ae_GetTextHeight(ushort fontID)
		{
			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling F0_VGA_11ae_GetTextHeight({fontID})");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_11ae_GetTextHeight({fontID})");

			// function body
			this.oCPU.AX.Word = (ushort)GetDrawStringSize(fontID, "?").Height;

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_11ae_GetTextHeight");
			this.oCPU.Log = oTempLog;
		}

		public void F0_VGA_11d7_DrawString(ushort rectPtr, int xPos, int yPos, ushort stringPtr)
		{
			CivRectangle rect = new CivRectangle(this.oCPU, CPUMemory.ToLinearAddress(this.oCPU.DS.Word, rectPtr));
			string text = this.oCPU.ReadString(CPUMemory.ToLinearAddress(this.oCPU.DS.Word, stringPtr));

			LogWrapper oTempLog = this.oCPU.Log;
			this.oCPU.Log.WriteLine($"// Calling: F0_VGA_11d7_DrawText({xPos}, {yPos}, '{text}')");
			this.oCPU.Log = this.oParent.VGADriverLog;
			this.oCPU.Log.EnterBlock($"F0_VGA_11d7_DrawText({xPos}, {yPos}, '{text}')");

			this.oCPU.Log.WriteLine("// Parameters: ({" +
				$"ScreenID: {rect.ScreenID}, " +
				$"X: {rect.X}, " +
				$"Y: {rect.Y}, " +
				$"Width: {rect.Width}, " +
				$"Height: {rect.Height}, " +
				$"Flags: 0x{rect.Flags:x4}, " +
				$"Back color: {rect.BackColor}, " +
				$"Pixel mode: {rect.PixelMode}, " +
				$"Front color: {rect.FrontColor}, " +
				$"Font ID: {rect.FontID}" +
				"}, " +
				$"{xPos}, {yPos}, '{text}'" +
				")");

			// function body
			if (this.aFonts.ContainsKey(rect.FontID))
			{
				CivFont font = this.aFonts.GetValueByKey(rect.FontID);

				if (this.aScreens.ContainsKey(rect.ScreenID))
				{
					lock (this.VGALock)
					{
						VGABitmap screen = this.aScreens.GetValueByKey(rect.ScreenID);
						Rectangle rect1 = new Rectangle(rect.X + xPos, rect.Y + yPos, rect.Width, rect.Height);

						screen.DrawString(text, font, rect1, rect.FrontColor, rect.BackColor, (PixelWriteModeEnum)rect.PixelMode);
					}
				}
				else
				{
					throw new Exception($"The screen {rect.ScreenID} is not allocated");
				}
			}
			else
			{
				throw new Exception($"Unknown Font {rect.FontID}");
			}

			// Far return
			this.oCPU.Log.ExitBlock("F0_VGA_11d7_DrawText");
			this.oCPU.Log = oTempLog;
		}
		#endregion
	}
}
